{"version":3,"sources":["components/Landing/index.jsx","components/Containerlogin/FormDesktop/index.jsx","components/Containerlogin/FormMobile/index.jsx","components/Containerlogin/index.jsx","components/ContainerForgotPassword/index.jsx","components/ContainerChangePassword/index.jsx","components/ContainerVerifyAccount/index.jsx","components/UserDashboardNew/FundsContainer/CardsContainer/FundCard/ChangeNameModal/index.jsx","components/UserDashboardNew/FundsContainer/CardsContainer/FundCard/index.jsx","components/UserDashboardNew/FundsContainer/CardsContainer/CashCard/index.jsx","components/UserDashboardNew/FundsContainer/CardsContainer/index.jsx","components/UserDashboardNew/FundsContainer/index.jsx","components/I18n/index.jsx","components/LanguageSelector/index.jsx","components/UserDashboardNew/NavBars/NavBar/index.jsx","components/UserDashboardNew/NavBars/NavInfo/index.jsx","components/UserDashboardNew/NavBars/NavBarMobile/index.jsx","components/UserDashboardNew/NavBars/NavBarTotal/index.jsx","components/UserDashboardNew/Footer/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardFund/MovementsTab/TableLastMovements/Movement/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardFund/MovementsTab/TableLastMovements/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardFund/MovementsTab/NoMovements/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardFund/MovementsTab/Loading/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardFund/MovementsTab/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardFund/FundDetail/Chart/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardFund/FundDetail/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardFund/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardAccount/MovementsTab/TableLastMovements/Movement/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardAccount/MovementsTab/TableLastMovements/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardAccount/MovementsTab/NoMovements/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardAccount/MovementsTab/Loading/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardAccount/MovementsTab/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardAccount/FundDetail/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MainCard/MainCardAccount/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/SecondaryCard/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MobileCards/MobileCardFound/TableLastMovements/Movement/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MobileCards/MobileCardFound/TableLastMovements/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MobileCards/MobileCardFound/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MobileCards/MobileCardAccount/TableLastMovements/Movement/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MobileCards/MobileCardAccount/TableLastMovements/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/MobileCards/MobileCardAccount/index.jsx","components/UserDashboardNew/User/MovementsTable/CardsContainer/index.jsx","components/UserDashboardNew/User/MovementsTable/index.jsx","components/UserDashboardNew/Admin/AddAccount/index.jsx","components/UserDashboardNew/User/newTicket/BuyForm/FundSelector/FundCard/index.jsx","components/UserDashboardNew/User/newTicket/BuyForm/FundSelector/index.jsx","components/UserDashboardNew/User/newTicket/BuyForm/BuyData/index.jsx","components/UserDashboardNew/User/newTicket/Loading/index.jsx","components/UserDashboardNew/User/newTicket/NoFunds/index.jsx","components/UserDashboardNew/User/newTicket/BuyForm/index.jsx","components/UserDashboardNew/User/newTicket/SellForm/FundSelector/FundCard/index.jsx","components/UserDashboardNew/User/newTicket/SellForm/FundSelector/index.jsx","components/UserDashboardNew/User/newTicket/SellForm/SellData/index.jsx","components/UserDashboardNew/User/newTicket/SellForm/index.jsx","components/UserDashboardNew/User/newTicket/WithdrawForm/index.jsx","components/UserDashboardNew/User/newTicket/DepositForm/index.jsx","components/UserDashboardNew/User/newTicket/OperationStatus/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/ViewAndDeleteFunds/FundsTable/FundRow/DeleteConfirmationModal/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/ViewAndDeleteFunds/FundsTable/FundRow/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/ViewAndDeleteFunds/FundsTable/AddFundRow/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/ViewAndDeleteFunds/FundsTable/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/ViewAndDeleteFunds/FundsSearch/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/ViewAndDeleteFunds/NoFunds/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/ViewAndDeleteFunds/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/EditFunds/EditForm/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/EditFunds/EditResult/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/EditFunds/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/CreateFunds/CreateForm/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/CreateFunds/CreateResult/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/CreateFunds/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/Loading/index.jsx","components/UserDashboardNew/Admin/FundsAdministration/index.jsx","components/UserDashboardNew/index.jsx","components/NotFound/index.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Landing","t","useTranslation","history","useHistory","sessionStorage","getItem","clear","push","Container","Row","className","Col","style","height","Spinner","animation","variant","FormDesktop","handleChange","handleSubmit","buttonDisabled","error","buttonContent","loading","setButtonContent","data","setLoading","setData","Card","Form","onSubmit","Body","Img","src","InputGroup","Text","id","icon","faUser","FormControl","placeholder","value","email","onChange","required","type","xs","faLock","Check","checked","admin","Button","size","href","Footer","disabled","as","role","display","FormMobile","setButtonDisabled","setError","autoComplete","password","ContainerLogin","toDashBoard","path","useState","Some","setSome","FormData","setFormData","Background","setBackground","window","innerWidth","width","setWidth","event","aux","target","undefined","preventDefault","stopPropagation","Login","a","url","process","fetch","method","body","JSON","stringify","headers","Accept","response","status","json","setItem","access_token","console","log","handleWindowSizeChange","isMobile","useEffect","addEventListener","removeEventListener","onClick","backgroundNumber","slice","parseInt","cycleBG","backgroundImage","sm","md","lg","xl","ContainerForgotPassword","message","setMessage","formData","validated","setValidated","requestPasswordReset","CardGroup","noValidate","currentTarget","checkValidity","faEnvelope","Control","useParams","user","token","Message","username","validation","validationFlag","setValidationFlag","match","setMatch","checkLenght","setCheckLenght","uncheckLenght","setunCheckLenght","checkNumber","setCheckNumber","uncheckNumber","setunCheckNumber","checkSymbol","setCheckSymbol","uncheckSymbol","setunCheckSymbol","checkCapital","setCheckCapital","uncheckCapital","setunCheckCapital","checkLowercase","setCheckLowercase","uncheckLowercase","setunCheckLowercase","length","lenght","toUpperCase","lowercase","toLowerCase","capitalLetter","number","symbol","passwordConfirm","changePassword","fluid","defaultValue","faKey","ContainerVerifyAccount","verifyAccount","URLSearchParams","FloatingLabel","label","ChangeNameModal","show","handleClose","Modal","onHide","Header","Title","controlId","FundCard","Hide","setHide","Fund","setShow","fund","alt","name","shares","sharePrice","toString","replace","faEye","faEyeSlash","faIdCard","OverlayTrigger","rootClose","trigger","placement","overlay","Popover","popperConfig","e","focus","faPaperPlane","CashCard","parseFloat","balance","CardsContainer","setItemSelected","Funds","Accounts","showRightChevron","setShowRightChevron","showLeftChevron","setShowLeftChevron","FundsContainer","createRef","isNull","current","scrollFundContainer","right","cardWidth","clientWidth","scrollAmount","slideTimer","setInterval","scrollLeft","clearInterval","scrollWidth","ref","map","account","key","j","k","faChevronRight","faChevronLeft","NavInfoToggled","numberOfFunds","setNumberOfFunds","setFunds","FetchingFunds","setFetchingFunds","setAccounts","toLogin","getFunds","Authorization","getAccounts","i18n","use","initReactI18next","init","fallbackLng","localStorage","saveMissing","resources","gb","translation","es","interpolation","escapeValue","LanguageSelector","languages","findIndex","x","code","selected","setSelected","changeLanguage","language","Dropdown","Toggle","verticalAlign","Menu","Item","active","NavBarDashBoard","itemSelected","setNavInfoToggled","useRouteMatch","toAccounts","toMovements","toBuy","toSell","toDeposit","toWithdraw","Navbar","sticky","collapseOnSelect","expand","paddingBottom","faChevronCircleUp","Nav","parse","Link","NavDropdown","title","faSignOutAlt","borderColor","NavBarInfo","userData","Brand","firstName","lastName","NavBarMobile","faCommentsDollar","NavBarTotal","bg","spant","offset","span","Movement","content","momentDate","decimals","moment","createdAt","format","Math","sign","abs","TableLastMovements","page","setPage","movsShown","movementsCount","setPerformance","actualMoney","moneySpent","forEach","Table","striped","bordered","hover","u","i","NoMovements","Loading","MovementsTab","Movements","setMovements","FetchingMovements","setFetchingMovements","getMovements","fundId","sort","b","MovementsCount","Chart","Height","Width","amount","max","min","index","todayMoment","date","subtract","price","random","toFixed","generateData","ResponsiveContainer","LineChart","margin","top","bottom","left","Line","dataKey","stroke","CartesianGrid","strokeDasharray","XAxis","angle","dx","YAxis","Tooltip","ReferenceLine","y","Brush","FundDetail","chartContainer","setHeight","clientHeight","MainCard","SelectedTab","setSelectedTab","Performance","balanceInCash","fontWeight","activeKey","onSelect","eventKey","SecondaryCard","setCategorySelected","parentKey","ownKey","categorySelected","useRef","Collapse","in","fetchingMovements","open","setOpen","MobileCard","movements","border","collapseSecondary","setCollapseSecondary","MobileCardAccount","MobileCardFound","Account","MovementsTable","AddAccount","signup","setFundSelected","some","openAccordion","FundSelected","pointerEvents","freeShares","filter","composition","legend","colors","FundSelector","Accordion","Label","column","BuyData","toggleAccordion","Balance","step","Feedback","class","NoFunds","BuyForm","CollapsedFields","setCollapsedFields","setAccount","buy","getAccount","flush","defaultActiveKey","SellData","SellForm","sell","WithDrawForm","DepositForm","OperationStatus","faCheckCircle","DeleteConfirmationModal","setShowModal","chargeFunds","fetched","fetching","valid","DeleteFetch","setDeleteFetch","deleteFund","faExclamation","faCheck","faTimes","faTrashAlt","FundRow","AssetTypes","setAction","Action","ShowModal","getAssetTypeById","typeId","action","faEdit","assetTypes","AssetType","AddFundRow","faPlusCircle","FundsTable","FundsSearch","SearchText","handleSearch","FilteredFunds","cancelSearch","faSearch","ViewDeleteAndCreateFunds","EditFunds","EditRequest","faChevronCircleLeft","Select","Asset","readonly","setEditRequest","editFund","EditResult","EditForm","form","CreateFunds","CreateRequest","createFund","setCreateRequest","CreateResult","CreateForm","FundsAdministration","setFilteredFunds","setAssetTypes","setSearchText","getTypes","ViewAndDeleteFunds","regex","RegExp","suggestions","UserDashboard","location","useLocation","setUserData","pathname","split","setBalance","WithdrawForm","NotFund","faFrown","App","exact","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.84f1df25.chunk.js","sourcesContent":["import React  from 'react'\nimport { useHistory } from 'react-router-dom';\nimport { Col, Row, Container, Spinner } from 'react-bootstrap';\nimport { useTranslation } from \"react-i18next\";\n\nfunction Landing() {\n    const { t } = useTranslation();\n\n    let history = useHistory();\n\n    // eslint-disable-next-line \n    const toLogin = () => {\n        sessionStorage.clear();\n        history.push(`/login`);\n    }\n\n    //When the app is opened, it checks if the user has a valid token in their local storage,\n    //if it is true, it is redirected to the dashboard, if not, it is redirected to login\n\n    let token = sessionStorage.getItem('access_token')\n    if(token===null){\n        toLogin()\n    }\n\n    return (\n        <Container>\n            <Row className=\"d-flex justify-content-center align-items-center\">\n                <Col style={{ height: \"calc(100vh - 64px)\" }} className=\"d-flex justify-content-center align-items-center\">\n                    <Spinner className=\"me-2\" animation=\"border\" variant=\"danger\" />\n                    <span className=\"loadingText\">{t(\"Loading\")}</span>\n                </Col>\n            </Row>\n        </Container>\n    );\n}\n\nexport default Landing;\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Col, Row, Spinner, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap'\nimport { useTranslation } from \"react-i18next\";\n\nconst FormDesktop = ({ handleChange, handleSubmit, buttonDisabled, error, buttonContent, setButtonContent, loading, setLoading, data, setData }) => {\n\n    const { t } = useTranslation();\n\n    return (\n        <Card className=\"loginCard\">\n            <Form onSubmit={handleSubmit}>\n                <Card.Body className=\"p-4\">\n                    <div className=\"d-flex justify-content-center\">\n                        <Card.Img className=\"mb-4\" src={process.env.PUBLIC_URL + '/images/logo/logo.png'} />\n                    </div>\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Text id=\"basic-addon1\">\n                            <FontAwesomeIcon icon={faUser} />\n                        </InputGroup.Text>\n                        <FormControl\n                            placeholder={t('Username or Email')}\n                            id=\"email\"\n                            value={data.email}\n                            onChange={handleChange}\n                            required\n                            type=\"email\"\n                        />\n                    </InputGroup>\n                    <Row className=\"d-flex align-items-between \">\n                        <Col xs=\"12\">\n                            <InputGroup className=\"mb-3\">\n                                <InputGroup.Text>\n                                    <FontAwesomeIcon icon={faLock} />\n                                </InputGroup.Text>\n                                <FormControl\n                                    type=\"password\"\n                                    placeholder={t('Password')}\n                                    onChange={handleChange}\n                                    id=\"password\"\n                                    required\n                                />\n                            </InputGroup>\n                        </Col>\n                        <Col xs=\"12\" className=\"text-right\">\n                            <h2 className=\"error\">{t(error)}</h2>\n                        </Col>\n                        <Col>\n                            <Form.Check\n                                checked={data.admin}\n                                onChange={handleChange}\n                                type=\"switch\"\n                                id=\"admin\"\n                            />\n                        </Col>\n                        <Col xs=\"auto\">\n                            <Button variant=\"link\" size=\"sm\" className=\"forgot\" href=\"/forgotPassword\">{t('Forgot Password?')}</Button>\n                        </Col>\n                    </Row>\n                </Card.Body>\n                <Card.Footer>\n                    <Button type=\"submit\" disabled={buttonDisabled} variant=\"danger\" className=\"button block px-4 py-2\">\n                        <Spinner\n                            as=\"span\"\n                            animation=\"border\"\n                            size=\"sm\"\n                            role=\"status\"\n                            aria-hidden=\"true\"\n                            style={{ display: loading ? \"inline-block\" : \"none\" }}\n                        />{' '}\n                        {t(buttonContent)}\n                    </Button>\n                </Card.Footer>\n            </Form>\n        </Card>\n    )\n}\nexport default FormDesktop","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faLock } from '@fortawesome/free-solid-svg-icons'\nimport { faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Col, Row, Spinner, Card, Form, InputGroup, FormControl, Button } from 'react-bootstrap'\nimport { useTranslation } from \"react-i18next\";\n\nconst FormMobile = ({ handleChange, handleSubmit, buttonDisabled, setButtonDisabled, error, setError, buttonContent, setButtonContent, loading, setLoading, data, setData }) => {\n    const { t } = useTranslation();\n\n    return (\n        <Form onSubmit={handleSubmit} className=\"d-block d-lg-none mobile\">\n            <div className=\"d-flex justify-content-center\">\n                <Card.Img className=\"mb-4\" src={process.env.PUBLIC_URL + '/images/logo/logo.png'} />\n            </div>\n            <InputGroup className=\"mb-3\">\n                <InputGroup.Text id=\"basic-addon1\">\n                    <FontAwesomeIcon icon={faUser} />\n                </InputGroup.Text>\n                <FormControl\n                    placeholder={t('Username or Email')}\n                    autoComplete=\"email\"\n                    id=\"email\"\n                    value={data.email}\n                    onChange={handleChange}\n                    required\n                />\n            </InputGroup>\n            <Row className=\"d-flex flex-row-reverse align-items-between\">\n                <Col xs=\"12\">\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Text>\n                            <FontAwesomeIcon icon={faLock} />\n                        </InputGroup.Text>\n                        <FormControl\n                            type=\"password\"\n                            placeholder={t('Password')}\n                            autoComplete=\"current-password\"\n                            onChange={handleChange}\n                            id=\"password\"\n                            value={data.password}\n                            required\n                        />\n                    </InputGroup>\n                </Col>\n                <Col xs=\"auto\" className=\"text-right\">\n                    <h2 className=\"error\">{t(error)}</h2>\n                    <Button variant=\"link\" size=\"sm\" className=\"forgot\" href=\"/forgotPassword\">{t('Forgot Password?')}</Button>\n                </Col>\n                <Col>\n                    <Form.Check\n                        checked={data.admin}\n                        onChange={handleChange}\n                        type=\"switch\"\n                        id=\"admin\"\n                    />\n                </Col>\n            </Row>\n            <Button type=\"submit\" disabled={buttonDisabled} variant=\"danger\" className=\"button block px-4 py-2\">\n                <Spinner\n                    as=\"span\"\n                    animation=\"border\"\n                    size=\"sm\"\n                    role=\"status\"\n                    aria-hidden=\"true\"\n                    style={{ display: loading ? \"inline-block\" : \"none\" }}\n                />{' '}\n                {t(buttonContent)}\n            </Button>\n        </Form>\n    )\n}\nexport default FormMobile","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport FormDesktop from './FormDesktop';\nimport { Col, Row, Container } from 'react-bootstrap'\nimport FormMobile from './FormMobile';\nimport { useHistory } from 'react-router-dom';\n\nconst ContainerLogin = () => {\n  let history = useHistory();\n  const toDashBoard = (path) => {\n    history.push(`/dashboardNew/${path}`);\n  }\n\n  const [buttonDisabled, setButtonDisabled] = useState(true)\n  const [error, setError] = useState(\"\");\n  const [buttonContent, setButtonContent] = useState(\"Login\");\n  const [loading, setLoading] = useState(false);\n  const [Some, setSome] = useState(false);\n\n  const [FormData, setFormData] = useState({ email: \"\", password: \"\", admin: false });\n  const [Background, setBackground] = useState(\"background1.png\");\n  const [width, setWidth] = useState(window.innerWidth);\n\n  const handleChange = (event) => {\n    let aux = FormData;\n    if (event.target.id === \"admin\") {\n      aux[event.target.id] = event.target.checked\n    } else {\n      aux[event.target.id] = event.target.value;\n    }\n    setFormData(aux);\n    setSome(!Some)\n    setButtonDisabled(((FormData.password !== undefined && FormData.password !== \"\") && (FormData.email !== undefined && FormData.email !== \"\")) ? false : true)\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    setButtonDisabled(true)\n    setLoading(true)\n    setButtonContent(\"Loading\")\n    Login()\n  }\n\n  const Login = async () => {\n    var url = `${process.env.REACT_APP_APIURL}/auth/login`;\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({ email: FormData.email, password: FormData.password }),\n      headers: {\n        Accept: \"*/*\",\n        'Content-Type': 'application/json'\n      }\n    })\n\n    if (response.status === 200) {\n      const data = await response.json()\n      sessionStorage.setItem(\"access_token\", data.access_token)\n      sessionStorage.setItem(\"admin\", FormData.admin)\n      if (FormData.admin) {\n        toDashBoard(\"addAccount\");\n      } else {\n        toDashBoard(\"accounts\");\n      }\n    } else {\n      switch (response.status) {\n        case 500://Unhandled (Por ahora lo tira cuando el mail no matchea con ninguno de los de la DB)\n          setError(\"Error. Vefique los datos ingresados\")\n          break;\n        case 401://Unauthorized, deberia saltar por el mail tambien\n          setError(\"Error. Vefique los datos ingresados\")\n          break;\n        default:\n          console.log(response.status)\n          setError(\"unhandled Message\")\n      }\n      setButtonContent(\"Login\")\n      setButtonDisabled(false)\n      setLoading(false)\n    }\n  }\n\n  const cycleBG = () => {\n    let backgroundNumber = (Background.slice(10, -4))\n    if (backgroundNumber <= 3) {\n      setBackground(`background${parseInt(backgroundNumber) + 1}.png`)\n    } else if (backgroundNumber <= 5) {\n      setBackground(`background${parseInt(backgroundNumber) + 1}.svg`)\n    } else {\n      setBackground(\"background1.png\")\n    }\n  }\n\n  function handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n  }\n\n  let isMobile = (width <= 576);\n\n  useEffect(() => {\n    window.addEventListener('resize', handleWindowSizeChange);\n    return () => {\n      window.removeEventListener('resize', handleWindowSizeChange);\n    }\n  }, [])\n\n  return (\n    <div\n      onClick={() => { cycleBG() }} className=\"login\"\n      style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/images/backGround/${Background})` }}>\n      <Container>\n        <Row className=\"d-flex min-vh-100  justify-content-center align-items-start align-items-sm-center pt-3\">\n          <Col xs=\"11\" sm=\"8\" md=\"6\" lg=\"5\" xl=\"4\">\n            {isMobile ?\n              <FormMobile\n                handleChange={handleChange}\n                handleSubmit={handleSubmit}\n                buttonDisabled={buttonDisabled}\n                setButtonDisabled={setButtonDisabled}\n                error={error}\n                setError={setError}\n                buttonContent={buttonContent}\n                setButtonContent={setButtonContent}\n                loading={loading}\n                setLoading={setLoading}\n                data={FormData}\n                setData={setFormData} />\n              :\n              <FormDesktop\n                handleChange={handleChange}\n                handleSubmit={handleSubmit}\n                buttonDisabled={buttonDisabled}\n                setButtonDisabled={setButtonDisabled}\n                error={error}\n                setError={setError}\n                buttonContent={buttonContent}\n                setButtonContent={setButtonContent}\n                loading={loading}\n                setLoading={setLoading}\n                data={FormData}\n                setData={setFormData} />\n            }\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\nexport default ContainerLogin","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEnvelope } from '@fortawesome/free-solid-svg-icons'\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from 'react-router-dom'\nimport { Container, Row, Col, Card, Form, InputGroup, Button, CardGroup } from 'react-bootstrap'\n\nconst ContainerForgotPassword = () => {\n  // eslint-disable-next-line\n\n  // eslint-disable-next-line\n  const [error, setError] = useState(\"\")\n  // eslint-disable-next-line\n  const [message, setMessage] = useState(\"\")\n  const [buttonDisabled, setButtonDisabled] = useState(false)\n\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  // eslint-disable-next-line \n  const toLogin = () => {\n    history.push(`/login`);\n  }\n\n  const [formData, setFormData] = useState({})\n  const [validated, setValidated] = useState(false);\n\n  const handleChange = (event) => {\n    let aux = formData;\n    aux[event.target.id] = event.target.value;\n    setFormData(aux);\n  };\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    if (form.checkValidity() === true) {\n      requestPasswordReset(formData)\n    }\n    setValidated(true);\n  }\n\n  const requestPasswordReset = async () => {\n    setButtonDisabled(true)\n    var url = `${process.env.REACT_APP_APIURL}/users/requestPasswordReset`;\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify(formData),\n      headers: {\n        Accept: \"*/*\",\n        'Content-Type': 'application/json'\n      }\n    })\n\n    if (response.status === 201) {\n      setMessage(\"Se ha enviado un mail con un link para reestablecer su contraseña\")\n      setButtonDisabled(false)\n    } else {\n      setButtonDisabled(false)\n      switch (response.status) {\n        case 500:\n          setMessage(\"Error. Vefique el mail ingresado\")\n          break;\n        default:\n          console.log(response.status)\n          setMessage(\"unhandled Error\")\n      }\n    }\n  }\n\n  return (\n    <div className=\"forgotPassword min-vh-100 d-flex flex-row align-items-center\">\n      <Container>\n        <Row className=\"justify-content-center\">\n          <Col md=\"5\">\n            <CardGroup>\n              <Card className=\"p-4\">\n                <Card.Body>\n                  <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <h1>{t(\"Password Reset\")}</h1>\n                    <p className=\"text-medium-emphasis\">{t(`Enter your user account's verified email address. We will send you a password reset link.`)}</p>\n                    <h2 className=\"error m-2\">{error}</h2>\n                    <h2 className=\"message m-2\">{message}</h2>\n                    <InputGroup className=\"mb-2\">\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faEnvelope} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        placeholder=\"Email\"\n                        autoComplete=\"email\"\n                        onChange={handleChange}\n                        required\n                        type=\"email\"\n                        id=\"email\"\n                      />\n                    </InputGroup>\n                    {/*\n                      <InputGroup className=\"mb-2\">\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUser} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        placeholder={t('Username')}\n                        autoComplete=\"username\"\n                        id=\"username\"\n                        required\n                        onChange={handleChange}\n                      />\n                    </InputGroup>\n                    <InputGroup className=\"mb-5\">\n                      <InputGroup.Text>\n                        <FontAwesomeIcon icon={faUser} />\n                      </InputGroup.Text>\n                      <Form.Control\n                        placeholder={t('Birthdate')}\n                        autoComplete=\"date\"\n                        id=\"birthdate\"\n                        type=\"date\"\n                        required\n                        onChange={handleChange}\n                      />\n                    </InputGroup>*/\n                    }\n\n                    <Button variant=\"danger\" className=\"button\" type=\"submit\" disabled={buttonDisabled}>\n                      {t(\"Reset password\")}\n                    </Button>\n                  </Form>\n                </Card.Body>\n              </Card>\n            </CardGroup>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\nexport default ContainerForgotPassword\n","import React, { useState } from 'react'\nimport { useHistory, useParams } from 'react-router-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faKey, faLock, faUser, } from '@fortawesome/free-solid-svg-icons'\nimport { useTranslation } from \"react-i18next\";\nimport { Col, Row, Container, Card, Form, Button, InputGroup } from 'react-bootstrap'\n\nconst ContainerForgotPassword = () => {\n  const { t } = useTranslation();\n  let history = useHistory();\n\n  // eslint-disable-next-line \n  const { user, token } = useParams();\n\n  // eslint-disable-next-line \n  const toLogin = () => {\n    history.push(`/login`);\n  }\n\n  // eslint-disable-next-line\n  const [Message, setMessage] = useState(\"\")\n  const [formData, setFormData] = useState({  token :token,username : user})\n  const [validated, setValidated] = useState(false);\n\n  const [validation] = useState({})\n  const [validationFlag, setValidationFlag] = useState(false)\n  const [match, setMatch] = useState(\"block\")\n  const [checkLenght, setCheckLenght] = useState(\"none\")\n  const [uncheckLenght, setunCheckLenght] = useState(\"\")\n  const [checkNumber, setCheckNumber] = useState(\"none\")\n  const [uncheckNumber, setunCheckNumber] = useState(\"\")\n  const [checkSymbol, setCheckSymbol] = useState(\"none\")\n  const [uncheckSymbol, setunCheckSymbol] = useState(\"\")\n  const [checkCapital, setCheckCapital] = useState(\"none\")\n  const [uncheckCapital, setunCheckCapital] = useState(\"\")\n  const [checkLowercase, setCheckLowercase] = useState(\"none\")\n  const [uncheckLowercase, setunCheckLowercase] = useState(\"\")\n  const [buttonDisabled, setButtonDisabled] = useState(false)\n\n  const handleChange = (event) => {\n    if (event.target.id !== \"passwordConfirm\") {\n      formData[event.target.id] = event.target.value\n    }\n    let aux = formData\n    aux[event.target.id] = event.target.value\n\n    if (event.target.id === \"password\") {\n      //Validate lenght\n      if (event.target.value.length >= 8) {\n        validation.lenght = true\n        setCheckLenght(\"\")\n        setunCheckLenght(\"none\")\n\n      } else {\n        validation.lenght = false\n        setCheckLenght(\"none\")\n        setunCheckLenght(\"\")\n\n      }\n      //Validate lowecase letters\n      if (event.target.value === event.target.value.toUpperCase()) {\n        validation.lowercase = false\n        setCheckLowercase(\"none\")\n        setunCheckLowercase(\"\")\n      } else {\n        validation.lowercase = true\n        setCheckLowercase(\"\")\n        setunCheckLowercase(\"none\")\n      }\n      //Validate capital letters \n      if (event.target.value === event.target.value.toLowerCase()) {\n        validation.capitalLetter = false\n        setCheckCapital(\"none\")\n        setunCheckCapital(\"\")\n      } else {\n        validation.capitalLetter = true\n        setCheckCapital(\"\")\n        setunCheckCapital(\"none\")\n      }\n      //Validate Numbers\n      var numbers = /[0-9]/g;\n      if (event.target.value.match(numbers)) {\n        validation.number = true\n        setCheckNumber(\"\")\n        setunCheckNumber(\"none\")\n      } else {\n        validation.number = false\n        setCheckNumber(\"none\")\n        setunCheckNumber(\"\")\n      }\n      //Validate Symbol\n      var symbol = /[!@#$%^&*]/g;\n      if (event.target.value.match(symbol)) {\n        validation.symbol = true\n        setCheckSymbol(\"\")\n        setunCheckSymbol(\"none\")\n      } else {\n        validation.symbol = false\n        setCheckSymbol(\"none\")\n        setunCheckSymbol(\"\")\n      }\n      if (validation.symbol && validation.number && validation.capitalLetter && validation.lenght && validation.lowercase) {\n        setValidationFlag(true)\n      } else {\n        setValidationFlag(false)\n      }\n    }\n    if (formData.passwordConfirm === formData.password && validationFlag && formData.username !== \"\" && formData.token !== \"\") {\n      setButtonDisabled(false)\n      setMatch(\"none\")\n    } else {\n      setMatch(\"block\")\n      setButtonDisabled(true)\n    }\n    setFormData(aux)\n  }\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    event.stopPropagation();\n    const form = event.currentTarget;\n    if (form.checkValidity() === true) {\n      changePassword(formData)\n    }\n    setValidated(true);\n  }\n\n  const changePassword = async () => {\n    setButtonDisabled(true)\n    var url = `${process.env.REACT_APP_APIURL}/users/resetPassword`;\n    const response = await fetch(url, {\n      method: 'POST',\n      body: JSON.stringify({token:formData.token,password:formData.password,id:parseInt(formData.id)}),\n      headers: {\n        Accept: \"*/*\",\n        'Content-Type': 'application/json'\n      }\n    })\n\n    if (response.status === 200) {\n      setMessage(\"Su contraseña se ha reestablecido correctamente\")\n      setButtonDisabled(false)\n    } else {\n      setButtonDisabled(false)\n      switch (response.status) {\n        case 500:\n          setMessage(\"Error. Vefique los datos ingresados\")\n          break;\n        default:\n          console.log(response.status)\n          setMessage(\"unhandled Message\")\n      }\n    }\n  }\n\n  return (\n    <div className=\"changePassword min-vh-100 d-flex flex-row align-items-center\">\n      <Container fluid>\n        <Row className=\"justify-content-center\">\n          <Col xs=\"12\" sm=\"8\" md=\"8\" lg=\"5\" xl=\"4\">\n            <Card className=\"p-4\">\n              <Card.Body>\n              <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                  <h1 className=\"pb-2\">{t(\"Change password\")}</h1>\n                  {user !== undefined ?\n                    <p className=\"text-medium-emphasis\">{t(\"Change password for\")} {user}</p>\n                    :\n                    <></>}\n                  <p className=\"Message mb-1\">{Message}</p>\n                  <InputGroup className=\"mb-2\">\n                    <InputGroup.Text>\n                      <FontAwesomeIcon icon={faUser} />\n                    </InputGroup.Text>\n                    <Form.Control\n                      placeholder={t(\"id\")}\n                      defaultValue={user}\n                      autoComplete=\"id\"\n                      onChange={handleChange}\n                      required\n                      id=\"id\"\n                      type=\"number\"\n                    />\n                  </InputGroup>\n                  <InputGroup className=\"mb-2\">\n                    <InputGroup.Text>\n                      <FontAwesomeIcon icon={faKey} />\n                    </InputGroup.Text>\n                    <Form.Control\n                      placeholder=\"Token\"\n                      onChange={handleChange}\n                      required\n                      id=\"token\"\n                      defaultValue={token}\n                    />\n                  </InputGroup>\n                  <InputGroup className=\"mb-2\">\n                    <InputGroup.Text>\n                      <FontAwesomeIcon icon={faLock} />\n                    </InputGroup.Text>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder={t(\"Password\")}\n                      autoComplete=\"new-password\"\n                      required\n                      onChange={handleChange}\n                      id=\"password\"\n                    />\n                  </InputGroup>\n                  <Form.Text className=\"text-muted formText mb-4\">\n                    <p className=\"validation\">{t(\"Make sure at least the new password have\")}:\n                      <br />\n                      {t(\"8 characters lenght\")}\n                      <span className=\"textGreen\" style={{ \"display\": checkLenght }}>✓</span>\n                      <span className=\"textRed\" style={{ \"display\": uncheckLenght }}>✗</span>\n                      <br />\n                      {t(\"a number\")}\n                      <span className=\"textGreen\" style={{ \"display\": checkNumber }}>✓</span>\n                      <span className=\"textRed\" style={{ \"display\": uncheckNumber }}>✗</span>\n                      <br />\n                      {t(\"a lowercase letter\")}\n                      <span className=\"textGreen\" style={{ \"display\": checkLowercase }}>✓</span>\n                      <span className=\"textRed\" style={{ \"display\": uncheckLowercase }}>✗</span>\n                      <br />\n                      {t(\"a capital letter\")}\n                      <span className=\"textGreen\" style={{ \"display\": checkCapital }}>✓</span>\n                      <span className=\"textRed\" style={{ \"display\": uncheckCapital }}>✗</span>\n                      <br />\n                      {t(\"a symbol\")}\n                      <span className=\"textGreen\" style={{ \"display\": checkSymbol }}>✓</span>\n                      <span className=\"textRed\" style={{ \"display\": uncheckSymbol }}>✗</span>\n                    </p>\n                  </Form.Text>\n                  <InputGroup  >\n                    <InputGroup.Text>\n                      <FontAwesomeIcon icon={faLock} />\n                    </InputGroup.Text>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder={t(\"Confirm password\")}\n                      autoComplete=\"new-password\"\n                      required onChange={handleChange}\n                      id=\"passwordConfirm\"\n                    />\n                  </InputGroup>\n                  <Form.Text className=\"mb-4 text-muted formText\" style={{ \"display\": match }}>\n                    <p className=\"textRed validation\">{t(\"The fields \\\"password\\\" and \\\"confirm password\\\" don't match\")}</p>\n                  </Form.Text>\n                  <Button variant=\"danger\" type=\"submit\" className='button' disabled={buttonDisabled} >\n                    {t(\"Change password\")}\n                  </Button>\n                </Form>\n              </Card.Body>\n            </Card>\n          </Col>\n        </Row>\n      </Container>\n    </div>\n  )\n}\nexport default ContainerForgotPassword\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useParams } from 'react-router-dom';\nimport { Container, Row, Col, Card, Form, FloatingLabel, Button } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next';\nimport './index.css'\nconst ContainerVerifyAccount = () => {\n    const { t } = useTranslation();\n    const { user, token } = useParams();\n\n    const [message,setMessage]=useState(\"\")\n    const [formData, setFormData] = useState({})\n    const [validated, setValidated] = useState(false);\n    const [buttonDisabled, setButtonDisabled] = useState(false)\n    const handleChange = (event) => {\n        let aux = formData;\n        aux[event.target.id] = event.target.value;\n        setFormData(aux);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const form = event.currentTarget;\n        if (form.checkValidity() === true) {\n            verifyAccount(formData)\n        }\n        setValidated(true);\n    }\n\n    const verifyAccount = async () => {\n        setButtonDisabled(true)\n        var url = `${process.env.REACT_APP_APIURL}/users/verify/?` + new URLSearchParams({\n            token: formData.token,\n        });\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                Accept: \"*/*\",\n            }\n        })\n\n        if (response.status === 200) {\n            setMessage(\"La cuenta ha sido verificada\")\n            setButtonDisabled(false)\n          } else {\n              switch (response.status) {\n                  case 500:\n                    setMessage(\"Error. Vefique los datos ingresados\")\n                    break;\n                  default:\n                    console.error(response.status)\n                    setMessage(\"unhandled Error\")\n                }\n            setButtonDisabled(false)\n          }\n    }\n\n    return (\n        <Container fluid className=\"px-0 verifyAccount \">\n            <Row className=\"min-100vh d-flex justify-content-center align-items-center\">\n                <Col sm=\"12\" md=\"10\" lg=\"6\" xl=\"5\">\n                    <Card className=\"px-2 pb-4\">\n                        <Card.Body>\n                            <h1 className=\"pb-2\">{t(\"Verify Account\")}</h1>\n                            <Form noValidate validated={validated} onSubmit={handleSubmit} >\n                                <FloatingLabel\n                                    label={t(\"Token\")}\n                                    className=\"mb-3\"\n                                >\n                                    <Form.Control\n                                        required\n                                        defaultValue={token}\n                                        type=\"text\"\n                                        placeholder={t(\"Token\")}\n                                        id=\"token\"\n                                        onChange={handleChange}\n                                    />\n                                </FloatingLabel>\n                                <FloatingLabel\n                                    label={t(\"username\")}\n                                    className=\"mb-3\"\n                                >\n                                    <Form.Control\n                                        defaultValue={user}\n                                        type=\"text\"\n                                        placeholder={t(\"username\")}\n                                        id=\"username\"\n                                        onChange={handleChange}\n\n                                    />\n                                </FloatingLabel>\n                                <FloatingLabel\n                                    label={t(\"name\")}\n                                    className=\"mb-3 capitalize\"\n                                >\n                                    <Form.Control\n                                        className=\"capitalize\"\n                                        defaultValue={user}\n                                        type=\"text\"\n                                        placeholder={t(\"name\")}\n                                        id=\"name\"\n                                        onChange={handleChange}\n\n                                    />\n                                </FloatingLabel>\n                                <FloatingLabel\n                                    label={t(\"surname\")}\n                                    className=\"mb-3 capitalize\"\n                                >\n                                    <Form.Control\n                                        id=\"surname\"\n                                        className=\"capitalize\"\n                                        defaultValue={user}\n                                        type=\"text\"\n                                        placeholder={t(\"surname\")}\n                                        onChange={handleChange}\n                                    />\n                                </FloatingLabel>\n\n                                <FloatingLabel\n                                    id=\"password\"\n                                    label={t(\"Password\")}\n                                    className=\"mb-3\"\n                                >\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder={t(\"Password\")}\n                                        onChange={handleChange}\n                                    />\n                                </FloatingLabel>\n                                <FloatingLabel\n                                    id=\"confirmPassword\"\n                                    label={t(\"Confirm password\")}\n                                    className=\"mb-3\"\n                                >\n                                    <Form.Control\n                                        type=\"password\"\n                                        placeholder={t(\"Token\")}\n                                        onChange={handleChange}\n                                    />\n                                </FloatingLabel>\n                                <p>{message}</p>\n                                <Row className=\"d-flex justify-content-end\">\n                                    <Col xs=\"auto\">\n                                        <Button className=\"button\" variant=\"danger\" type=\"submit\" disabled={buttonDisabled}>{t(\"Submit\")}</Button>\n                                    </Col>\n                                </Row>\n                            </Form>\n                        </Card.Body>\n                    </Card>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default ContainerVerifyAccount\n","import React from 'react'\nimport { Modal, Button,Form,FloatingLabel } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst ChangeNameModal = ({ show, handleClose }) => {\n    return (\n        <Modal className=\"modal\" show={show} onHide={handleClose}>\n            <Modal.Header className=\"header\">\n                <Modal.Title className=\"title\">Edit Name</Modal.Title>\n            </Modal.Header>\n            <Modal.Body className=\"body\">\n                <FloatingLabel\n                    controlId=\"floatingInput\"\n                    label=\"Name\"\n                    className=\"mb-3\"\n                >\n                    <Form.Control type=\"text\" placeholder=\"Name\" />\n                    <Form.Text className=\"help\" >\n                        The new account name must be 8-20 characters long,\n                        and can only contain letters numbers and spaces\n                    </Form.Text>\n                </FloatingLabel>\n            </Modal.Body>\n            <Modal.Footer className=\"footer\">\n                <Button variant=\"outline-secondary\" onClick={handleClose}>\n                    Cancel\n                </Button>\n                <Button variant=\"outline-danger\" onClick={handleClose}>\n                    Save Changes\n                </Button>\n            </Modal.Footer>\n        </Modal>\n    )\n}\nexport default ChangeNameModal","import React from 'react'\nimport { useState } from 'react';\nimport { Container,Row, Col, Card, Button, Popover, OverlayTrigger } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEyeSlash, faEye, faIdCard, faPaperPlane } from '@fortawesome/free-solid-svg-icons'\nimport './index.css'\nimport ChangeNameModal from './ChangeNameModal'\n\nconst FundCard = ({ Hide, setHide, Fund }) => {\n    const [show, setShow] = useState(false)\n\n    const handleClose = () => setShow(false);\n    const handleShow = () => setShow(true);\n\n    const { t } = useTranslation();\n\n    return (\n        <Col className=\"fund-col\" sm=\"6\" md=\"6\" lg=\"4\">\n            <Card className=\"FundCard h-100\">\n                <Card.Header\n                    className=\"header d-flex align-items-center justify-content-center\"\n                >\n                    <div className=\"currencyContainer d-flex align-items-center justify-content-center\">\n                        {\n                            Fund.fund.type !== undefined ?\n                                <img className=\"currency px-0 mx-0\" alt={Fund.fund.type} src={process.env.PUBLIC_URL + '/images/' + Fund.fund.type + '.svg'} />\n                                :\n                                <img className=\"currency px-0 mx-0\" alt=\"crypto\" src={process.env.PUBLIC_URL + '/images/crypto.svg'} />\n                        }\n                    </div>\n                </Card.Header>\n                <Card.Body className=\"body\">\n                    <Row className=\"h-100 align-content-between\">\n                        <Card.Title >\n                            <h1 className=\"title mt-0\">\n                                {t(Fund.fund.name)}\n                            </h1>\n                        </Card.Title>\n                        <Container>\n                            <Row className=\"d-flex justify-content-between\">\n                                <h1 className=\"title mt-1\">\n                                    <Row className=\"d-flex justify-content-between\">\n                                        <div className=\"pe-2 containerHideInfo\">\n                                            <span>$</span>\n                                            <span className={`info ${Hide ? \"shown\" : \"hidden\"}`}>\n                                                {(Fund.shares * Fund.fund.sharePrice).toString().replace(/./g, \"*\")}\n                                            </span>\n                                        \n                                            <span className={`info ${Hide? \"hidden\" : \"shown\"}`}>\n                                                {(Fund.shares * Fund.fund.sharePrice).toString()}\n                                            </span>\n\n                                            <span className={`info placeholder`}>\n                                                {(Fund.shares * Fund.fund.sharePrice).toString()}\n                                            </span>\n                                        </div>\n                                        <div className=\"ps-0 hideInfoButton d-flex align-items-center\"> \n                                            <FontAwesomeIcon \n                                                className={`icon ${Hide ? \"hidden\" : \"shown\"}`}\n                                                onClick={() => {setHide(!Hide)}}\n                                                icon={faEye}\n                                            />\n                                            <FontAwesomeIcon \n                                                className={`icon ${!Hide ? \"hidden\" : \"shown\"}`}\n                                                onClick={() => {setHide(!Hide)}}\n                                                icon={faEyeSlash}\n                                            />\n                                            <FontAwesomeIcon \n                                            className=\"icon placeholder\"\n                                                icon={faEyeSlash}\n                                            />\n                                        </div>\n                                    </Row>\n                                </h1>\n                                <Card.Text className=\"subTitle lighter mt-0 mb-2\">\n                                    Acquired FeeParts:<span className=\"bolder\"> {Fund.shares}</span><br />\n                                    FeePart Price (updated: Now):<span className=\"bolder\"> ${Fund.fund.sharePrice}</span><br />\n                                </Card.Text>\n                            </Row>\n                        </Container>\n                    </Row>\n                </Card.Body>\n                <Card.Footer className=\"footer mt-2 m-0 p-0\">\n                    <Row className=\"d-flex justify-content-center m-0\">\n                        <Col xs=\"6\" className=\"d-flex justify-content-center p-0 m-0\">\n                            <Button onClick={() => { handleShow() }} className=\"me-1 button left\">\n                                <FontAwesomeIcon icon={faIdCard} />\n                            </Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"d-flex justify-content-center p-0 m-0\">\n                            <OverlayTrigger rootClose trigger='click' placement=\"left-start\" overlay={\n                                <Popover id=\"popover-basic\" >\n                                    <Popover.Header className=\"mt-0\">{t(\"Fund menu\")}</Popover.Header>\n                                    <Popover.Body>\n                                        Some Action\n                                    </Popover.Body>\n                                </Popover>\n                            } popperConfig={Fund}>\n                                <Button className=\"ms-1 button right\">\n                                    <FontAwesomeIcon onClick={(e) => { e.target.focus() }} icon={faPaperPlane} />\n                                </Button>\n                            </OverlayTrigger>\n                        </Col>\n                    </Row>\n                </Card.Footer>\n            </Card>\n            <ChangeNameModal show={show} handleClose={handleClose} />\n        </Col>\n\n\n    )\n}\nexport default FundCard","import React from 'react'\nimport { Container, Row, Col, Card, Button } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEyeSlash, faEye } from '@fortawesome/free-solid-svg-icons'\nimport { useHistory } from 'react-router-dom';\nimport './index.css'\n\nconst CashCard = ({ Hide, setHide, Fund }) => {\n    const { t } = useTranslation();\n\n    let history = useHistory();\n\n    const toDeposit = (type) => {\n        history.push(`/dashboardNew/deposit`);\n    }\n\n    const toWithdraw = (type) => {\n        history.push(`/dashboardNew/withdraw`);\n    }\n\n    return (\n        <Col sm=\"6\" md=\"6\" lg=\"4\" className=\"fund-col\">\n            <Card className=\"h-100 cashCard\">\n                <Card.Header\n                    className=\"header d-flex align-items-center justify-content-center\"\n                >\n                    <div className=\"currencyContainer d-flex align-items-center justify-content-center\">\n                        <img className=\"currency px-0 mx-0\" alt=\"cash\" src={process.env.PUBLIC_URL + '/images/cash.svg'} />\n                    </div>\n                </Card.Header>\n                <Card.Body className=\"body\">\n                    <Card.Title >\n                        <h1 className=\"title mt-0\">\n                            {t(\"Cash\")}\n                        </h1>\n                        <Container fluid className=\"px-0\">\n                            <Row className=\"d-flex justify-content-between\">\n                                <h1 className=\"title mt-1\">\n                                    <Row className=\"d-flex justify-content-between\">\n                                        <div className=\"pe-2 containerHideInfo\">\n                                            <span>$</span>\n                                            <span className={`info ${Hide ? \"shown\" : \"hidden\"}`}>\n                                                {parseFloat(Fund.balance).toString().replace(/./g, \"*\")}\n                                            </span>\n\n                                            <span className={`info ${Hide ? \"hidden\" : \"shown\"}`}>\n                                                {parseFloat(Fund.balance).toString()}\n                                            </span>\n\n                                            <span className={`info placeholder`}>\n                                                {parseFloat(Fund.balance).toString()}\n                                            </span>\n                                        </div>\n                                        <div className=\"ps-0 hideInfoButton d-flex align-items-center\">\n                                            <FontAwesomeIcon\n                                                className={`icon ${Hide ? \"hidden\" : \"shown\"}`}\n                                                onClick={() => { setHide(!Hide) }}\n                                                icon={faEye}\n                                            />\n                                            <FontAwesomeIcon\n                                                className={`icon ${!Hide ? \"hidden\" : \"shown\"}`}\n                                                onClick={() => { setHide(!Hide) }}\n                                                icon={faEyeSlash}\n                                            />\n                                            <FontAwesomeIcon\n                                                className=\"icon placeholder\"\n                                                icon={faEyeSlash}\n                                            />\n                                        </div>\n                                    </Row>\n                                </h1>\n                            </Row>\n                        </Container>\n                    </Card.Title>\n                </Card.Body>\n                <Card.Footer className=\"footer mt-2 m-0 p-0\">\n                    <Row className=\"d-flex justify-content-center m-0\">\n                        <Col xs=\"6\" className=\"d-flex justify-content-center p-0 m-0\">\n                            <Button onClick={() => toDeposit()} className=\"me-1 button left d-flex align-items-center justify-content-center\">\n                                <span className=\"label\">Deposit</span>\n                            </Button>\n                        </Col>\n                        <Col xs=\"6\" className=\"d-flex justify-content-center p-0 m-0\">\n                            <Button onClick={() => toWithdraw()} className=\"ms-1 button right d-flex align-items-center justify-content-center\">\n                                <span className=\"label\">Withdraw</span>\n                            </Button>\n                        </Col>\n                    </Row>\n                </Card.Footer>\n            </Card>\n        </Col>\n\n\n    )\n}\nexport default CashCard","import React, { useEffect, createRef, useState } from 'react'\nimport { Row, Container } from 'react-bootstrap';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport FundCard from './FundCard';\nimport CashCard from './CashCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nconst CardsContainer = ({ setItemSelected, Funds, Accounts }) => {\n    const [showRightChevron, setShowRightChevron] = useState(true)\n    const [showLeftChevron, setShowLeftChevron] = useState(false)\n    const [Hide, setHide] = useState(false)\n\n    //For scrolling\n    const FundsContainer = createRef()\n\n    const isNull = () => {\n        return (FundsContainer.current === null)\n    }\n\n    //Scrolling Function\n    const scrollFundContainer = (right) => {\n        let cardWidth = isNull() ? \"\" : FundsContainer.current.clientWidth / 3\n        if (right) {\n            let scrollAmount = 0;\n            let slideTimer = setInterval(function () {\n                if (!isNull()) {\n                    FundsContainer.current.scrollLeft += 15;\n                    scrollAmount += 15;\n                }\n                if (!isNull() && scrollAmount >= cardWidth) {\n                    window.clearInterval(slideTimer);\n                    if (isNull() ? false : FundsContainer.current.scrollLeft !== 0 && !showLeftChevron) {\n                        setShowLeftChevron(true)\n                    } else if (isNull() ? false : FundsContainer.current.scrollWidth\n                        - FundsContainer.current.clientWidth === FundsContainer.current.scrollLeft) {\n                        setShowRightChevron(false)\n                        setShowLeftChevron(true)\n                    }\n                }\n            }, 25);\n        } else {\n            let scrollAmount = 0;\n            let slideTimer = setInterval(function () {\n                if (!isNull()) {\n                    FundsContainer.current.scrollLeft -= 15;\n                    scrollAmount += 15;\n                }\n                if (!isNull() && scrollAmount >= cardWidth) {\n                    window.clearInterval(slideTimer);\n                    if (isNull() ? false : FundsContainer.current.scrollLeft === 0 && showLeftChevron) {\n                        setShowLeftChevron(false)\n                        setShowRightChevron(true)\n                    } else if (isNull() ? false : FundsContainer.current.scrollWidth\n                        - FundsContainer.current.clientWidth !== FundsContainer.current.scrollLeft) {\n                        setShowRightChevron(true)\n                    }\n                }\n            }, 25);\n        }\n    }\n\n    useEffect(() => {\n        return () => {\n        }\n    }, [Funds])\n\n    return (\n        <Container className=\"px-0 d-flex justify-content-center accountsContainerWidth cardsContainer p-relative\">\n            <Row ref={FundsContainer}\n                className={`d-flex align-items-stretch ${Funds.length < 3 ? \"justify-content-center\" : \"\"}\n                w-100 g-1 g-sm-5 pb-2 flex-wrap flex-sm-nowrap overflow-hidden `}>\n                {Accounts.map((account, key) => {\n                    return (\n                        <CashCard key={key} Hide={Hide} setHide={setHide} Fund={account} />\n                    )\n                })\n                }\n                {\n                    Funds.map((j, k) => {\n                        return (\n                            <FundCard Hide={Hide} setHide={setHide} key={k}\n                                setItemSelected={setItemSelected} Funds={Funds} Fund={j} />\n                        )\n                    }\n                    )\n                }\n\n            </Row>\n            <div className={`arrow  right d-none d-sm-block\n                                ${Funds.length > 2 && showRightChevron ? \"opacity-1\" : \"\"}`}\n                onClick={() => scrollFundContainer(true)}>\n                <FontAwesomeIcon icon={faChevronRight} />\n            </div>\n            <div className={` arrow left d-none d-sm-block\n                                ${Funds.length > 2 && showLeftChevron ? \"opacity-1\" : \"\"}`}\n                onClick={() => scrollFundContainer(false)}>\n                <FontAwesomeIcon icon={faChevronLeft} />\n            </div>\n        </Container>\n\n    )\n}\nexport default CardsContainer\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport CardsContainer from './CardsContainer';\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from 'react-router-dom'\nimport { Spinner, Row, Container, Col } from 'react-bootstrap';\nconst FundsContainer = ({ NavInfoToggled, isMobile, setItemSelected, numberOfFunds, setNumberOfFunds }) => {\n    let history = useHistory();\n    // eslint-disable-next-line\n    const { t } = useTranslation();\n    const [Funds, setFunds] = useState([]);\n    const [FetchingFunds, setFetchingFunds] = useState(true);\n\n    const [Accounts, setAccounts] = useState([])\n\n    // eslint-disable-next-line \n\n    useEffect(() => {\n        const token = sessionStorage.getItem('access_token')\n\n        const toLogin = () => {\n            sessionStorage.clear();\n            history.push(`/login`);\n        }\n\n        const getFunds = async () => {\n            var url = `${process.env.REACT_APP_APIURL}/funds/stakes`;\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.status === 200) {\n                const data = await response.json()\n                setFunds(data)\n            } else {\n                switch (response.status) {\n                    default:\n                        toLogin()\n                }\n            }\n        }\n\n        const getAccounts = async () => {\n            var url = `${process.env.REACT_APP_APIURL}/accounts`;\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.status === 200) {\n                const data = await response.json()\n                setAccounts(data)\n                if (data.length > 0) sessionStorage.setItem('balance', data[0].balance)\n            } else {\n                switch (response.status) {\n                    default:\n                        toLogin()\n                }\n            }\n        }\n\n        if(token===null) toLogin()\n        setFetchingFunds(true)\n        getFunds()\n        getAccounts()\n        setFetchingFunds(false)\n\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    return (\n        <Container fluid\n            className={`accountParent px-0 ${NavInfoToggled ? \"min-free-area-withoutNavInfo\" : \"min-free-area\"} d-flex align-items-center`}>            {\n                    FetchingFunds\n                    ?\n                    <Container fluid>\n                        <Row className=\"d-flex justify-content-center align-items-center\">\n                            <Col xs=\"12\" className=\"d-flex justify-content-center align-items-center\">\n                                <Spinner className=\"me-2\" animation=\"border\" variant=\"danger\" />\n                                <span className=\"loadingText\">{t(\"Loading Content\")}</span>\n                            </Col>\n                        </Row>\n                    </Container>\n                    :\n                    <CardsContainer\n                        NavInfoToggled={NavInfoToggled}\n                        setItemSelected={setItemSelected}\n                        isMobile={isMobile}\n                        Funds={Funds}\n                        numberOfFunds={numberOfFunds}\n                        Accounts={Accounts}\n                    />\n            }\n        </Container>\n    )\n}\nexport default FundsContainer\n","import i18n from \"i18next\";\nimport { initReactI18next } from \"react-i18next\";\n//import detector from \"i18next-browser-languagedetector\";\n//import backend from \"i18next-http-backend\";\n\nconst getLanguage = () => {\n  if (localStorage.getItem(\"language\") !== undefined) {\n    localStorage.setItem(\"language\", \"es\")\n    return \"es\"\n  } else {\n    localStorage.setItem(\"language\", \"gb\")\n    return \"es\"\n  }\n}\n\ni18n\n  //.use(detector) //Detects the browser language\n  //.use(backend)\n  .use(initReactI18next) // passes i18n down to react-i18next\n  .init({\n    fallbackLng: getLanguage(), // use en if detected lng is not available\n    saveMissing: true, // send not translated keys to endpoint\n\n    // the translations\n    // (TODO: move them in a JSON file and import them)\n    resources: {\n      gb: {\n        translation: {\n          //Translations in English\n          //Translations for login \n          \"Welcome to React\": \"Welcome to react\",\n          \"Username\": \"Username\",\n          \"Password\": \"Password\",\n          \"Forgot Password?\": \"Forgot Password?\",\n          \"Login\": \"Login\",\n          //Translations for changePassword\n          \"Password Reset\": \"Password Reset\",\n          \"Enter your user account's verified email address and we will send you a password reset link.\":\n            \"Enter your user account's verified email address and we will send you a password reset link.\",\n          \"Send password reset email\": \"Send password reset email\"\n          //Translation for Currencyes ABM\n        }\n      },\n      es: {\n        translation: {\n          //Translations in Spanish\n          //Translations for login\n          \"Welcome to React\": \"Bienvenido a react\",\n          \"Username or Email\": \"Nombre de usuario o email\",\n          \"Password\": \"Contraseña\",\n          \"Forgot Password?\": \"¿Olvidaste tu contraseña?\",\n          \"Login\": \"Iniciar Sesión\",\n          \"Keep me logged in\": \"Mantener la sesión iniciada\",\n          \"Sorry, the login failed! Please Try again\": \"Lo sentimos, el inicio de sesión falló. Inténtalo de nuevo\",\n          //Translations for changePassword\n          \"Password Reset\": \"Restablecimiento de contraseña\",\n          \"Enter your user account's verified email address. We will send you a password reset link.\":\n            \"Ingrese la dirección de correo electrónico verificada de su cuenta. Le enviaremos un enlace de restablecimiento de contraseña.\",\n          \"Send password reset email\": \"Enviar Email de restablecimiento de contraseña\",\n          \"Sorry, the request failed! Please Try again\": \"Lo sentimos, la solicitud falló. Inténtalo de nuevo\",\n          //Translation for Currencies ABM\n          \"Currencies\": \"Monedas\",\n          \"Add New\": \"Agregar una nueva\",\n          \"Currency Code\": \"Codigo de la Moneda\",\n          \"Currency Name\": \"Nombre de la Moneda\",\n          \"Currency Symbol\": \"Simbolo de la Moneda\",\n          \"No search results Fund\": \"No se encontraron resultados para su busqueda\",\n          \"Return\": \"Volver\",\n          \"Submit\": \"Enviar\",\n          //Translation for changePassword\n          \"username\": \"Nombre de Usuario\",\n          \"Change password\": \"Reestablecer contraseña\",\n          \"Change password for\": \"Reestablecer la contraseña para\",\n          \"Confirm password\": \"Confirmar contraseña\",\n          \"8 characters lenght\": \"8 caracteres.\",\n          \"a number\": \"un número\",\n          \"a lowercase letter\": \"una letra minúscula\",\n          \"a capital letter\": \"una letra mayúscula\",\n          \"a symbol\": \"un símbolo\",\n          \"The fields \\\"password\\\" and \\\"confirm password\\\" don't match\": \"Los campos \\\"contraseña\\\" y \\\"confirmar contraseña\\\" no coinciden\",\n          //Translation for dashboard\n          \"Loading Content\": \"Cargando Contenido\",\n          \"Your user don't have any account\": \"Su usuario no dispone de ninguna cuenta\",\n          \"Account\": \"Usuario\",\n          \"LogOut\": \"Cerrar Sesión\",\n          \"Home\": \"Inicio\",\n          \"Credit\": \"Credito\",\n          \"Debit\": \"Debito\",\n          \"Product Line\": \"Linea de producto\",\n          \"Account last movements\": \"Ultimos movimientos de la cuenta\",\n          \"Description\": \"Descripción\",\n          \"Date\": \"Fecha\",\n          \"Amount\": \"Monto\",\n          \"Check account\": \"Cuenta de cheques\",\n          \"Savings account\": \"Cuenta de ahorros\",\n          \"Make sure at least the new password have\": \"Asegurese de que contenga al menos\",\n          \"English\": \"Inglés\",\n          \"Spanish\": \"Español\",\n          \"There are no records of any movement in this account\": \"No hay registro de ningún movimiento en esta cuenta\",\n          //Translation for transfer request\n          \"Account menu\": \"Menú de la cuenta\",\n          \"Account Number\": \"Número de cuenta\",\n          \"Transaction Request\": \"Solicitud de transferencia\",\n          \"Source Account ID\": \"ID de cuenta de origen\",\n          \"Transaction Destination\": \"Destino de la transferencia\",\n          \"Internal transaction\": \"Transferencia interna\",\n          \"Wadiah customer\": \"Cliente de Wadiah\",\n          \"US transaction\": \"Transferencia a EE. UU.\",\n          \"International transaction\": \"Transferencia internacional\",\n          \"Internal Transactions\": \"Transferencias internas\",\n          \"Bank Address\": \"Dirección del banco\",\n          \"Please, select a source account for the transaction\": \"Por favor, seleccione una cuenta de origen para la transacción\",\n          \"Please, enter a short description about the transaction\": \"Por favor, ingrese una corta descripcion sobre la transferencia\",\n          \"Please, enter the movement amount\": \"Por favor, ingrese la cantidad que desea transferir\",\n          \"Please, select the source account to autocomplete this field\": \"Por favor, seleccione la cuenta de origen para que este campo sea autocompletado\"\n          , \"Currency\": \"Moneda\"\n          , \"Movement Amount\": \"Cantidad a transferir\"\n          , \"Please, enter at least 3 characters to search and select the country of origin of the bank to which the target account belongs\":\n            \"Por Favor, ingrese por lo menos 3 caracteres para buscar y seleccionar el pais de origen del banco al que pertenece la cuenta destino\",\n          \"Country\": \"Pais\",\n          \"City\": \"Ciudad\",\n          \"Address\": \"Direccion\",\n          \"State\": \"Estado\"\n          , \"Please, enter at least 3 characters to search and select the state of origin of the bank to which the target account belongs\":\n            \"Por favor, ingrese por lo menos 3 caracteres para buscar y seleccionar el estado de origen del banco al que pertenece la cuenta destino\"\n          , \"Please, enter at least 3 characters to search and select the city of origin of the bank to which the target account belongs\":\n            \"Por favor, ingrese por lo menos 3 caracteres para buscar y seleccionar la ciudad de origen del banco al que pertenece la cuenta destino\"\n          , \"Please, enter the address from the bank to which the target account belongs\": \"Por favor, ingrese la direccion del banco al que pertenece la cuenta destino\"\n          , \"Save target account details to use for future transactions\": \"Guardar los detalles de la cuenta destino para transferencia futuras\"\n          , \"Target Beneficiary\": \"Beneficiario destino\",\n          \"Please, enter the name of the owner of source account\": \"Por favor, ingrese el nombre de la persona a la que pertenece la cuenta destino\",\n          \"Target Bank Name\": \"Nombre del Banco destino\",\n          \"Please, enter the name from the  bank which the target account belongs\": \"Por favor, ingrese el nombre del banco al que pertenece la cuenta destino\"\n          , \"Target Routing Number\": \"Numero de Ruta Bancaria destino\",\n          \"Please, enter the routing number from the bank which the target account belongs\": \"Por favor, ingrese el numero de ruta bancaria del banco al que pertenece la cuenta destino\",\n          \"Target Account ID\": \"ID de la cuenta destino\",\n          \"Target Account\": \"Cuenta destino\",\n          \"Please, enter the id from the target account\": \"Por favor, ingrese la ID de la cuenta destino\",\n          \"Please, select the target account\": \"Por favor, seleccione la cuenta destino\",\n          \"-- select an option --\": \"-- Seleccione una opcion --\",\n          \"Client of Another Bank\": \"Cliente de otro banco\",\n          \"The external number doesn't match with any Wadiah's account\": \"El numero de cuenta ingresado no corresponde con ninguna cuenta perteneciente a Wadiah\",\n          \"The external number entered belongs to an account with a currency different from the source account\":\n            \"El numero de cuenta ingresado corresponde a una cuenta con una moneda diferente a la de la cuenta de origen seleccionada\",\n          \"Please, select a source account\": \"Por favor, seleccione la cuenta de origen\",\n          \"The external number was validated correctly!\": \"El numero de cuenta fue validado correctamente!\",\n          \"Special instructions\": \"Instrucciones especiales\",\n          \"Accounts\": \"Cuentas\",\n          \"Other transfers\": \"Otras transferencias\",\n          \"Internal Transaction Request\": \"Solicitud de transferencia Interna\",\n          \"Source Account\": \"Cuenta de origen\",\n          \"Account Type\": \"Tipo de cuenta\",\n          \"New contact\": \"Nuevo contacto\",\n          \"Saved contact\": \"Contacto guardado\",\n          \"Recent contact\": \"Contacto reciente\",\n          \"Wadiah Customer\": \"Cliente de wadiah\",\n          \"Please, enter the the target account\": \"Por favor, introduzca la cuenta destino\",\n          \"Please, enter at least 3 characters to search and select the country from the owner of the target account\": \"Por favor, introduzca al menos 3 caracteres para bucar y seleccionar el pais de origen de la cuenta destino\",\n          \"Transaction details\": \"Detalles de la transferencia\",\n          \"Transaction Request Description\": \"Descripccion de la transferencia\",\n          \"Target Bank information\": \"Informacion del banco destino\",\n          \"Target Bank Number\": \"Número del banco destino\",\n          \"Bank Geographic Info\": \"Informacion geografica del banco\",\n          \"Zip Code\": \"Codigo postal\",\n          \"Please, enter the zip code from the bank to which the target account belongs\": \"Por favor, ingrese el codigo postal del banco al qal ue pertenece la cuenta destino\",\n          \"Pending Authorization\": \"Autorización pendiente\",\n          \"Transaction Pending\": \"Transferencia pendiente\",\n          \"Transaction Confirmed\": \"Transferencia confirmada\",\n          \"There was an error reported by the bank\": \"Hubo un error reportado por el banco\",\n          \"There was an error\": \"Hubo un error\",\n          \"Transaction cancelled\": \"Transferencia cancelada\",\n          \"Transaction voided\": \"Transferencia anulada\",\n          \"January\": \"Enero\",\n          \"February\": \"Febrero\",\n          \"March\": \"Marzo\",\n          \"April\": \"Abril\",\n          \"May\": \"Mayo\",\n          \"June\": \"Junio\",\n          \"July\": \"Julio\",\n          \"August\": \"Agosto\",\n          \"September\": \"Septiembre\",\n          \"October\": \"Octubre\",\n          \"November\": \"Noviembre\",\n          \"December\": \"Diciembre\",\n          \"at\": \"a las\",\n          \"Transaction status\": \"Estado de la transferencia\",\n          \"Transaction from\": \"Transferido desde\",\n          \"Transaction to\": \"Transferido a\",\n          \"Summary\": \"Resumen\",\n          \"History\": \"Historial\",\n          \"Create New Ticket\": \"Crear un nuevo ticket\",\n          \"Contact\": \"Contacto\",\n          \"Bank Transfer\": \"Transaccion Bancaria\",\n          \"Security\": \"Seguridad\",\n          \"Profile\": \"Perfil\",\n          \"Not Fund\": \"Dirección no encontrada\",\n          \"Initial Funds\": \"Fondos Iniciales\",\n          \"name\": \"nombre\",\n          \"surname\": \"apellido\",\n          \"Buy\": \"Comprar\",\n          \"Sell\": \"Vender\",\n          \"Deposit\": \"Depositar\",\n          \"Withdraw\": \"Retirar\",\n          \"Select Fund To sell\": \"Seleccione el fondo a vender\",\n          \"Select Fund To buy\": \"Seleccione el fondo a comprar\",\n          \"Specify amount in dollars you want to invest\": \"Especifique el monto en dolares que desea invertir\",\n          \"Specify amount in dollars you want to sell\": \"Especifique el monto en dolares que desea vender\",\n          \"Total Balance\": \"Balance Total\",\n          \"Add Account\": \"Añadir una cuenta\",\n          \"Last Name\": \"Apellido\",\n          \"First Name\": \"Nombre\",\n          \"Hi\": \"Hola\",\n          \"Reset password\": \"Reestablecer\",\n          \"API's Funds (For devops)\": \"Fondos de la API (Para desarrolladores)\",\n          \"Value of the share (at the time of the operation)\": \"Valor de la cuotaparte (en el momento de la operación)\",\n          \"in FeePars\": \"En cuotapartes\",\n          \"In Cash\": \"En dinero\",\n          \"Last Movements\": \"Ultimos Movimientos\",\n          \"Fund Detail\": \"Detalle del fondo\",\n          \"There are no records of any movement in this Fund.\": \"No hay registros de ningún movimiento en este Fondo.\",\n          \"There are no movements to show\": \"No hay movimientos que mostrar\",\n          \"Operations\": \"Operaciones\",\n          \"There are no funds available for the operation\":\n            \"No hay fondos disponibles para la operación\",\n          \"Pending approvals\": \"Aprobaciones pendientes\",\n          \"Funds Administration\": \"Administración de fondos\",\n          \"Search fund by name\": \"Buscar Fondos por nombre\",\n          \"Name\": \"Nombre\",\n          \"Shares\": \"Cuota partes\",\n          \"Free Shares\": \"Cuota partes libres\",\n          \"Share Price\": \"Valor de la cuota parte\",\n          \"Actions\": \"Acciones\",\n          \"There were no results for your search\": \"No hubieron resultados para tu búsqueda\",\n          \"Fund delete confirmation\": \"Confirmación de eliminación del fondo\",\n          \"You are about to delete the fund\": \"Estas a punto de eliminar el fondo\",\n          \"Are you sure?\": \"¿Estas seguro?\",\n          \"This action cannot be undone\": \"Esta accion no puede ser deshecha\",\n          \"Cancel\": \"Cancelar\",\n          \"Type\": \"Tipo\",\n          \"Close\": \"Cerrar\",\n          \"The fund\": \"El fondo\",\n          \"has been removed succesfully\": \"Fue eliminado correctamente\",\n          \"It is probably due to a user owning shares\":\n            \"Probablemente se deba a que un usuario posee acciones\",\n          \"Failed to delete the fund\":\n            \"Fallo al intentar eliminar el fondo\",\n          \"Loading\": \"Cargando\",\n          \"Assets Type\": \"Tipo de Assets\",\n          \"You must provide a name for the fund\": \"Debe proveer un nombre para el fondo\",\n          \"The shares must be more than 0\": \"Las cantidad de cuotapartes debe ser mayor a 0\",\n          \"The free shares must be more than 0\": \"Las cantidad de cuotapartes disponibles debe ser mayor a 0\",\n          \"The free shares must be less than or equal to Fund's total shares\": \"La cantidad de cuotapartes libres debe ser menor o igual que la cantidad de cuotapartes\",\n          \"The share price value must be greater than 0\": \"El valor de la cuotaparte debe ser mayor a 0\",\n          \"has been edited succesfully\":\"fue editado correctamente\",\n          \"Fund edit form for\":\"Formulario de edición del fondo\",\n          \"Form edit result for \":\"Resultado del formulario de edicion del fondo \",\n          \"The fund has been Created succesfully\":\"El fondo fue creado correctamente\",\n          \"Asset Types\":\"Tipo De Activos\",\n          \"Fund Create form\":\"Formulario de Creacion de Fondos\"\n        }\n      }\n    },\n    interpolation: {\n      escapeValue: false\n    }\n  });\nexport default i18n;\n\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from \"react-i18next\";\nimport i18n from '../I18n';\nimport { Dropdown } from 'react-bootstrap'\nimport './index.css'\nimport \"flag-icon-css/css/flag-icon.min.css\"\nconst LanguageSelector = () => {\n    const [languages] = useState(\n        [\n            {\n                \"code\": \"es\",\n                \"name\": \"Spanish\"\n            }, {\n                \"code\": \"gb\",\n                \"name\": \"English\"\n            }\n        ]);\n\n        const [selected, setSelected] = useState(localStorage.getItem(\"language\")===null ? 1 : languages.findIndex(x => x.code === localStorage.getItem(\"language\")))    \n        if(localStorage.getItem(\"language\")===null){\n            localStorage.setItem(\"language\",\"gb\")\n        } \n    const { t } = useTranslation();\n\n    const changeLanguage = (language) => {\n        i18n.changeLanguage(languages[language].code);\n        setSelected(language)\n        localStorage.setItem(\"language\", languages[language].code);\n    }\n\n    return (\n        <Dropdown className=\"languageSelector\">\n            <Dropdown.Toggle\n                variant=\"secondary btn-sm\"\n                className=\"bg-none\"\n                id=\"dropdown-basic\">\n                {selected===0 ?  <span className={`flag-icon flag-icon-${languages[0].code}`}></span> : <img src=\"https://raw.githubusercontent.com/MarcosParengo/assetsNbanking/master/2.png\" alt=\"en\" height=\"16px\" style={{verticalAlign:\"sub\"}}/>}  {t(languages[selected].name)}\n            </Dropdown.Toggle>\n\n            <Dropdown.Menu>\n                <Dropdown.Item active={ selected===0 ? true : false } onClick={() => changeLanguage(0)}>\n                    <span className={`flag-icon flag-icon-${languages[0].code}`}></span> {t(languages[0].name)}\n                </Dropdown.Item>\n                <Dropdown.Item active={ selected===1 ? true : false } onClick={() => changeLanguage(1)}>\n                    <img src=\"https://raw.githubusercontent.com/MarcosParengo/assetsNbanking/master/2.png\" alt=\"en\" height=\"16px\" style={{verticalAlign:\"sub\"}}/> {t(languages[1].name)}\n                </Dropdown.Item>\n            </Dropdown.Menu>\n        </Dropdown>\n    )\n}\nexport default LanguageSelector\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nimport { Nav, Navbar, Container, Row, Col, NavDropdown, Button, OverlayTrigger, Popover } from 'react-bootstrap'\nimport LanguageSelector from '../../../LanguageSelector';\nimport { useRouteMatch, useHistory } from 'react-router-dom';\n\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSignOutAlt, faChevronCircleUp } from '@fortawesome/free-solid-svg-icons'\n\nimport { useTranslation } from \"react-i18next\";\n\nconst NavBarDashBoard = ({ setItemSelected, itemSelected, NavInfoToggled, setNavInfoToggled }) => {\n\n\n    const { t } = useTranslation();\n\n    const { url } = useRouteMatch()\n    let history = useHistory();\n\n    const logOut = () => {\n        sessionStorage.clear();\n        history.push(`/`);\n    }\n\n    const toAccounts = () => {\n        history.push(`${url}/accounts`);\n    }\n\n    const toMovements = () => {\n        history.push(`${url}/history`);\n    }\n\n    const toBuy = (type) => {\n        history.push(`${url}/buy`);\n    }\n\n    const toSell = (type) => {\n        history.push(`${url}/sell`);\n    }\n\n    const toDeposit = (type) => {\n        history.push(`${url}/deposit`);\n    }\n\n    const toWithdraw = (type) => {\n        history.push(`${url}/withdraw`);\n    }\n\n    const toAddAccount = () => {\n        history.push(`${url}/addAccount`);\n    }\n\n    const toPendingAprovals = () => {\n        history.push(`${url}/pendingAprovals`);\n    }\n\n    const toFundsAdministration = () => {\n        history.push(`${url}/fundsAdministration`);\n    }\n\n    const toggleNavInfo = () => {\n        setNavInfoToggled(!NavInfoToggled)\n    }\n\n    const admin = sessionStorage.getItem(\"admin\")\n\n    return (\n\n        <Navbar sticky=\"top\" className=\"py-0 mb-0 navBarDesktop\" collapseOnSelect expand=\"sm\" variant=\"dark\" >\n            <Container fluid className=\"bottomInnerBorder px-0 d-none d-sm-block\">\n                <Row className=\"w-100 d-flex align-items-center mx-0\">\n                    <Col sm=\"auto\" md={1} lg={2} style={{ paddingBottom: \"5px\" }}>\n                        <Button className={`navInfoToggler ${NavInfoToggled ? \"toggled\" : \"\"}`} onClick={() => toggleNavInfo()}>\n                            <FontAwesomeIcon icon={faChevronCircleUp} />\n                        </Button>\n                    </Col>\n                    <Col className=\"px-0 flex-grow-1\" sm=\"auto\">\n                        <Nav >\n                            {\n                                JSON.parse(admin)\n                                    ?\n                                    <>\n                                        <Nav.Link\n                                            className=\"px-2\"\n                                            active={itemSelected === \"fundsAdministration\"}\n                                            onClick={() => { toFundsAdministration() }}>\n                                            {t(\"Funds Administration\")}\n                                        </Nav.Link>\n                                        <Nav.Link\n                                            className=\"px-2\"\n                                            active={itemSelected === \"addAccount\" || itemSelected === \"addAccount\"}\n                                            onClick={() => { toAddAccount() }}>\n                                            {t(\"Add Account\")}\n                                        </Nav.Link>\n                                        <Nav.Link\n                                            className=\"px-2\"\n                                            active={itemSelected === \"pendingAprovals\"}\n                                            onClick={() => { toPendingAprovals() }}>\n                                            {t(\"Pending approvals\")}\n                                        </Nav.Link>\n                                    </>\n                                    :\n                                    <>\n                                        <Nav.Link\n                                            className=\"px-2\"\n                                            active={itemSelected === \"accounts\" || itemSelected === \"Accounts\"}\n                                            onClick={() => { toAccounts() }}>\n                                            {t(\"Accounts\")}\n                                        </Nav.Link>\n                                        <Nav.Link\n                                            className=\"px-2 px-lg-4\"\n                                            active={itemSelected === \"history\"}\n                                            onClick={() => { toMovements() }}>\n                                            {t(\"History\")}\n                                        </Nav.Link>\n                                        <NavDropdown className=\"px-0 transactionDropdown\" active={itemSelected === \"buy\" || itemSelected === \"sell\" || itemSelected === \"deposit\" || itemSelected === \"withdraw\"} title={t(\"Operations\")} id=\"collasible-nav-dropdown\">\n                                            <NavDropdown.Item\n                                                active={itemSelected === \"buy\"}\n                                                onClick={() => { toBuy(); }}>\n                                                {t(\"Buy\")}\n                                            </NavDropdown.Item>\n                                            <NavDropdown.Item\n                                                active={itemSelected === \"sell\"}\n                                                onClick={() => { toSell(); }}>\n                                                {t(\"Sell\")}\n                                            </NavDropdown.Item>\n                                            <NavDropdown.Item\n                                                active={itemSelected === \"deposit\"}\n                                                onClick={() => { toDeposit(); }}>\n                                                {t(\"Deposit\")}\n                                            </NavDropdown.Item>\n                                            <NavDropdown.Item\n                                                active={itemSelected === \"withdraw\"}\n                                                onClick={() => { toWithdraw(); }}>\n                                                {t(\"Withdraw\")}\n                                            </NavDropdown.Item>\n                                        </NavDropdown>\n                                    </>\n                            }\n\n                        </Nav>\n                    </Col>\n                    <Col sm=\"auto\">\n                        <Nav className=\"d-flex align-items-center justify-content-end\">\n                            <div className=\"d-block d-sm-none d-md-block\" style={{ paddingBottom: \"5px\" }}>\n                                <LanguageSelector />\n                            </div>\n                            <Nav.Link onClick={() => logOut()}>\n                                {t(\"LogOut\")}{\" \"}\n                                <FontAwesomeIcon icon={faSignOutAlt} />\n                            </Nav.Link>\n                        </Nav>\n                    </Col>\n                </Row>\n            </Container>\n            <Navbar.Toggle style={{ borderColor: \"rgba(0,0,0,0)\" }} className=\"ps-2 ms-2 d-none\" aria-controls=\"responsive-navbar-nav\" />\n            <Nav className={`w-100 d-block d-sm-none`}  >\n                <Container fluid className=\"px-0\">\n                    <Row className={`w-100 justify-content-between align-items-center mx-0 px-0 ${itemSelected === \"accounts\" || itemSelected === \"Accounts\" || itemSelected === \"history\" ? \"d-flex\" : \"d-none\"}`}>\n                        <Col xs=\"6\" className=\"px-0\">\n                            <Nav.Link\n                                className=\"ps-4 text-start\"\n                                active={itemSelected === \"accounts\" || itemSelected === \"Accounts\"}\n                                onClick={() => { toAccounts() }}>\n                                {t(\"Accounts\")}\n                            </Nav.Link> </Col>\n                        <Col xs=\"6\" className=\"px-0\">\n                            <Nav.Link\n                                className=\"pe-4 text-end\"\n                                active={itemSelected === \"history\"}\n                                onClick={() => { toMovements() }}>\n                                {t(\"History\")}\n                            </Nav.Link>\n                        </Col>\n                    </Row>\n                    <Row className={`w-100 justify-content-between align-items-center mx-0 px-0 ${itemSelected === \"buy\" || itemSelected === \"sell\" || itemSelected === \"deposit\" || itemSelected === \"withdraw\" ? \"d-flex\" : \"d-none\"}`}>\n                        <Col xs=\"6\" className=\"px-0\">\n                            <OverlayTrigger trigger='focus' placement=\"bottom\" overlay={\n                                <Popover id=\"popover-funds\" className=\"OverlayNavMobile\" >\n                                    <Popover.Body>\n                                        <NavDropdown.Item\n                                            active={itemSelected === \"buy\"}\n                                            onClick={() => { toBuy(); }}>\n                                            {t(\"Buy\")}\n                                        </NavDropdown.Item>\n                                        <NavDropdown.Item\n                                            active={itemSelected === \"sell\"}\n                                            onClick={() => { toSell(); }}>\n                                            {t(\"Sell\")}\n                                        </NavDropdown.Item>\n                                    </Popover.Body>\n                                </Popover>\n                            } popperConfig={1}>\n                                <Button className={`left ${itemSelected === \"sell\" || itemSelected === \"buy\" ? \"active\" : \"\"}`}>\n                                    <p className=\"mb-0\" >Fund Operations</p>\n                                </Button>\n                            </OverlayTrigger>\n                        </Col>\n                        <Col xs=\"6\" className=\"px-0\">\n                            <OverlayTrigger trigger='focus' placement=\"bottom\" overlay={\n                                <Popover id=\"popover-cash\" className=\"OverlayNavMobile\">\n                                    <Popover.Body>\n                                        <NavDropdown.Item\n                                            active={itemSelected === \"deposit\"}\n                                            onClick={() => { toDeposit(); }}>\n                                            {t(\"Deposit\")}\n                                        </NavDropdown.Item>\n                                        <NavDropdown.Item\n                                            active={itemSelected === \"withdraw\"}\n                                            onClick={() => { toWithdraw(); }}>\n                                            {t(\"Withdraw\")}\n                                        </NavDropdown.Item>\n                                    </Popover.Body>\n                                </Popover>\n                            } popperConfig={1}>\n                                <Button className={`right ${itemSelected === \"withdraw\" || itemSelected === \"deposit\" ? \"active\" : \"\"}`}>\n                                    <p className=\"mb-0\" onClick={(e) => { e.target.focus() }}>Cash Operations</p>\n                                </Button>\n                            </OverlayTrigger>\n                        </Col>\n                    </Row>\n                </Container>\n            </Nav>\n        </Navbar>\n    )\n}\nexport default NavBarDashBoard\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nimport { Navbar, Row, Container, Col } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next';\n\n\nconst NavBarInfo = ({ userData,NavInfoToggled }) => {\n    const { t } = useTranslation();\n\n    return (\n\n        <Navbar className={`${NavInfoToggled?\"toggled\": \"\"} d-none d-sm-block py-0 navBarInfo d-flex justify-content-center`} collapseOnSelect expand=\"lg\" variant=\"dark\">\n            <Container fluid>\n                <Row className=\" w-100 d-flex justify-content-between align-items-center\">\n                    <Col className=\"d-flex justify-content-start\" xs=\"3\" sm=\"3\" md=\"2\" lg=\"2\">\n                        <Navbar.Brand>\n                            <img\n                                alt=\"\"\n                                src={process.env.PUBLIC_URL + '/images/logo/logo.png'}\n                                height=\"50\"\n                                className=\"d-inline-block align-top my-2\"\n                            />\n                        </Navbar.Brand>\n                    </Col>\n                    <Col xs=\"9\" sm=\"9\" md=\"10\" lg=\"10\" className=\"d-flex align-items-center\">\n                        <div>\n                            <h1 className=\"greeting p-0 my-0\" >\n                                {t(\"Hi\")},\n                                {` ${userData.firstName === undefined ? \"\" : userData.firstName === \"-\" ? \"\" : userData.firstName} \n                                ${userData.lastName === undefined ? \"\" : userData.lastName === \"-\" ? \"\" : userData.lastName}`}!\n                                </h1>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n\n        </Navbar>\n    )\n}\nexport default NavBarInfo\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCommentsDollar, faEnvelope, faUser } from '@fortawesome/free-solid-svg-icons'\nimport { Row, Container, Col } from 'react-bootstrap'\nimport { useRouteMatch, useHistory } from 'react-router-dom';\nimport { useTranslation } from \"react-i18next\";\n\nconst NavBarMobile = ({ setItemSelected , itemSelected }) => {\n\n    const { t } = useTranslation();\n\n    const { url } = useRouteMatch()\n    let history = useHistory();\n\n    const toAccounts = () => {\n        setItemSelected(\"accounts\")\n        history.push(`${url}/accounts`);\n    }\n\n    const toBuy = (type) => {\n        setItemSelected(\"buy\");\n        history.push(`${url}/buy`);\n    }\n\n    return (\n        <Container className=\"navBarMobile d-block d-sm-none\">\n            <Row className=\"rowNavBarMobile flex-nowrap flex-row row justify-content-center py-2\">\n                <Col\n                    xs=\"auto\"\n                    onClick={() => { toAccounts() }}\n                    className={`${itemSelected === \"accounts\" || itemSelected === \"Accounts\" || itemSelected === \"history\"  ? \"selected\" : \"\"}`}>\n                    <div className=\"d-flex justify-content-center\">\n                        <FontAwesomeIcon className=\"icon\" icon={faUser} />\n                    </div>\n                    <h1 className=\"section-label mt-0 mb-0 pb-0 pt-1 pb-0\" >{t(\"Funds\")}</h1>\n                </Col>\n                <Col\n                    xs=\"auto\"\n                    onClick={() => { toBuy(); }}\n                    className={`${itemSelected === \"buy\" || itemSelected === \"sell\" || itemSelected === \"deposit\" || itemSelected === \"withdraw\"? \"selected\" : \"\"}`}>\n                    <div className=\"d-flex justify-content-center\">\n                        <FontAwesomeIcon className=\"icon\" icon={faCommentsDollar} />\n                    </div>\n                    <h1 className=\"section-label mt-0 mb-0 pb-0  pt-1\" >{t(\"Create Tickets\")}</h1>\n                </Col>\n                <Col\n                    xs=\"auto\"\n                    className={`${itemSelected === \"contact\" ? \"selected\" : \"\"}`}>\n                    <div className=\"d-flex justify-content-center\">\n                        <FontAwesomeIcon className=\"icon\" icon={faEnvelope} />\n                    </div>\n                    <h1 className=\"section-label mt-0 mb-0 pb-0  pt-1\" >{t(\"Contact\")}</h1>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default NavBarMobile","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\n\nimport { useTranslation } from \"react-i18next\";\nimport { Navbar, Container,Col,Row } from 'react-bootstrap';\n\nimport './index.css'\n\nconst NavBarTotal = () => {\n    const { t } = useTranslation();\n    const balance=sessionStorage.getItem('balance')!==null ? sessionStorage.getItem('balance') : \"XXXX\"\n    \n    return (\n        <Navbar className=\"navBarTotal\" bg=\"light\">\n            <Container className=\"px-0\" fluid>\n                <Row className=\"w-100 mx-0\">\n                    <Col className=\"ps-2 ps-md-2 ps-lg-0\" md={{spant:\"auto\",offset:0}} lg={{ span: \"auto\", offset: 2 }}>\n                        <h1 className=\"total my-0 py-0\"> {t(\"Total Balance\")}: ${balance}</h1>\n                    </Col>\n                </Row>\n            </Container>\n        </Navbar>\n    )\n}\nexport default NavBarTotal\n\n\n\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css'\n\nimport { Navbar, Row, Container, Col } from 'react-bootstrap'\n\nconst Footer = () => {\n\n    return (\n        <Navbar sticky=\"bottom\" variant=\"dark\" className=\"d-none d-sm-block navBarFooter\">\n            <Container>\n                <Row className=\" w-100 d-flex justify-content-end align-items-center\">\n                    <Col className=\"d-flex justify-content-end align-items-center\">\n                        <span className=\"text\">Copyright © 2021, GWM. All rights reserved</span>\n                    </Col>\n                </Row>\n            </Container>\n\n        </Navbar>\n    )\n}\nexport default Footer\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\n\nconst Movement = ({ content, decimals, symbol }) => {\n  var momentDate = moment(content.createdAt);\n\n  return (\n      <tr>\n        <td className=\"tableDate\">{momentDate.format('MMMM Do YYYY, h:mm:ss a')}</td>\n        <td className={`tableAmount ${Math.sign(content.shares) === 1 ? 'text-green' : 'text-red'}`}><span>{Math.sign(content.shares) === 1 ? '+' : '-'}</span><span ></span>{Math.abs(content.shares)} FeeParts</td>\n        <td className={`tableAmount ${Math.sign(content.shares) === 1 ? 'text-green' : 'text-red'}`}><span>{Math.sign(content.shares) === 1 ? '+' : '-'}</span><span >$</span>{Math.abs(content.shares)*content.sharePrice}</td>\n        <td className=\"tableDescription d-none d-sm-table-cell \">${content.sharePrice}</td>\n      </tr>\n  )\n}\nexport default Movement\n","import React,{useEffect} from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table } from 'react-bootstrap';\nimport Movement from './Movement';\nimport { useTranslation } from \"react-i18next\";\n\nconst TableLastMovements = ({ page, setPage, movsShown, movementsCount, content, decimals, symbol,NavInfoToggled,Fund,setPerformance }) => {\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        let actualMoney= Fund.shares * Fund.fund.sharePrice\n        let moneySpent=0\n        content.forEach((a)=>{\n            moneySpent+=a.shares*a.sharePrice\n        })\n        setPerformance(actualMoney*100/moneySpent-100)\n    }, [Fund,content,setPerformance])\n\n    return (\n        <div className={NavInfoToggled? \"movementsTable-navInfoToggled\" : \"movementsTable\" }>\n            <Table id=\"tableMovements\" striped bordered hover className=\"mb-auto m-0\" >\n                <thead >\n                    <tr>\n                        <th className=\"tableHeader\">{t(\"Date\")}</th>\n                        <th className=\"d-none d-sm-table-cell\">{t(\"in FeePars\")}</th>\n                        <th className=\"tableAmount\">{t(\"In Cash\")}</th>\n                        <th className=\"tableDescription d-none d-sm-table-cell\">{t(\"Value of the share (at the time of the operation)\")}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {content.map((u, i) => { ; return (<Movement key={i} content={u} symbol={symbol} decimals={decimals} />) })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\nexport default TableLastMovements\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Col,\n  Row,\n} from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\n\nconst NoMovements = ({NavInfoToggled}) => {\n  //To use the translations from i18n\n  const { t } = useTranslation();  \n  return (\n    <Row className={`w-100 d-flex loadingMovements ${NavInfoToggled ? \"navInfoToggled\" : \"\"} justify-content-center align-items-center`}>\n    <Col\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <span className=\"loadingText\">{t(\"There are no movements to show\")}</span>\n        </Col>\n      </Row>\n  )\n}\nexport default NoMovements\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Col,\n  Row,\n  Spinner,\n} from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Loading = ({ NavInfoToggled }) => {\n  //To use the translations from i18n\n  const { t } = useTranslation();\n  return (\n    <Row className={`w-100 d-flex loadingMovements ${NavInfoToggled ? \"navInfoToggled\" : \"\"} justify-content-center align-items-center`}>\n      <Col\n        className=\"d-flex justify-content-center align-items-center\"\n      >\n        <Spinner className=\"me-2\" animation=\"border\" variant=\"success\" />\n        <span className=\"loadingText\">{t(\"Loading\")}</span>\n      </Col>\n    </Row>\n  )\n}\nexport default Loading\n","import React, { useState, useEffect } from 'react'\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {  useHistory } from 'react-router-dom';\nimport TableLastMovements from './TableLastMovements';\n//import MovementsPagination from './MovementsPagination';\nimport NoMovements from './NoMovements';\nimport Loading from './Loading';\n\n\nconst MovementsTab = ({ Fund,NavInfoToggled,setPerformance }) => {\n    const history = useHistory();\n\n    const [Movements, setMovements] = useState([])\n    const [page, setPage] = useState(0)\n    const [FetchingMovements, setFetchingMovements] = useState(true);\n\n    const token = sessionStorage.getItem('access_token')\n\n    const toLogin = () => {\n        sessionStorage.clear(); history.push(`/login`);\n    }\n\n    const getMovements = async () => {\n        setFetchingMovements(true)\n        var url = `${process.env.REACT_APP_APIURL}/funds/${Fund.fundId}/transactions`;\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 200) {\n            const data = await response.json()\n            setMovements(data.sort(function (a, b) { return (a.createdAt > b.createdAt) ? -1 : ((a.createdAt < b.createdAt) ? 1 : 0); }))\n            setFetchingMovements(false)\n        } else {\n            switch (response.status) {\n                default:\n                    console.error(response.status)\n                    toLogin()\n\n            }\n        }\n    }\n\n\n    useEffect(() => {\n        getMovements();\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [Fund])\n\n    return (\n        <>\n            {/*Movements */}\n            <div className=\"p-0 mb-2\">\n                <div className=\"d-flex align-items-start justify-content-center flex-column MovementsTableContainer\">\n                    {\n                        FetchingMovements ?\n                            <Loading NavInfoToggled={NavInfoToggled}/>\n                            :\n                            Movements.length > 0 ?\n                                <TableLastMovements\n                                setPerformance={setPerformance}\n                                    Fund={Fund}\n                                    NavInfoToggled={NavInfoToggled}\n                                    MovementsCount={100}\n                                    content={Movements}\n                                    /*movsShown={movsShown}*/\n                                    page={page}\n                                    setPage={setPage} />\n                                :\n                                <NoMovements NavInfoToggled={NavInfoToggled}/>\n                    }\n                    {/*\n                        <MovementsPagination\n                        MovementsCount={100}\n                        IsMobile={IsMobile}\n                        movsShown={movsShown}\n                        page={page}\n                        setPage={setPage}\n                        />\n                    */}\n                </div>\n            </div>\n        </>\n    )\n}\nexport default MovementsTab\n\n","import React from 'react'\nimport { LineChart, Line, CartesianGrid, XAxis, YAxis, Tooltip, ReferenceLine,ResponsiveContainer,Brush } from 'recharts';\nimport './index.css'\nimport moment from 'moment';\n\nconst Chart = ({ NavInfoToggled, Height, Width }) => {\n\n\n\n    const generateData = (amount = 10, max = 100, min = 0) => {\n        let data = []\n\n        for (let index = amount; index > 0; index--) {\n            let todayMoment = moment()\n            const date = todayMoment.subtract(index, \"days\").format('MMM DD YY')\n            const price = (Math.random() * (max - min) + min).toFixed(2);;\n\n            data.push({\n                date: date,\n                price: price\n            })\n        }\n        return data\n    }\n    let data=generateData(20,100,30)\n\n    return (\n        <ResponsiveContainer width=\"100%\" height={Height}>\n            <LineChart width={Width} height={Height} data={data} margin={{ top: 5, right: 20, bottom: 5, left: 0 }}>\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#808080\" />\n                <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\n                <XAxis dataKey=\"date\" angle={0} dx={20} />        \n                <YAxis />\n                <Tooltip />\n                <ReferenceLine y={80} label=\"Max\" stroke=\"red\" />\n                <Line type=\"monotone\" dataKey=\"price\" stroke=\"#808080\" />\n                <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" />\n                <Brush />\n            </LineChart>\n        </ResponsiveContainer> \n    )\n}\nexport default Chart\n\n","import React, { createRef,useEffect,useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Chart from './Chart';\n\nconst FundDetail = ({ NavInfoToggled }) => {\n    const chartContainer = createRef()\n    const [Width,setWidth]=useState(0)\n    const [Height,setHeight]=useState(0)\n\n    useEffect(() => {\n        const isNull = () => {\n            return (chartContainer.current === null)\n        }\n        if(!isNull()){\n            setWidth(chartContainer.current.clientWidth)\n            setHeight(chartContainer.current.clientHeight)\n        }\n    }, [chartContainer])\n    \n    return (\n        <div  ref={chartContainer} className={`mb-2 ${NavInfoToggled ? \"movementsTable-navInfoToggled\" : \"movementsTable\"} `}>\n            <Chart Height={Height} Width={Width}/>\n        </div>\n    )\n}\nexport default FundDetail\n\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row, Nav } from 'react-bootstrap';\n\nimport { useTranslation } from \"react-i18next\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEyeSlash, faEye } from '@fortawesome/free-solid-svg-icons'\n\nimport MovementsTab from './MovementsTab';\nimport FundDetail from './FundDetail';\nimport './index.css'\n\nconst MainCard = ({ Fund, Hide, setHide, NavInfoToggled }) => {\n    const [SelectedTab, setSelectedTab] = useState(\"0\")\n    const [Performance, setPerformance] = useState(0)\n\n    // eslint-disable-next-line \n\n\n    const { t } = useTranslation();\n    let history = useHistory();\n\n    // eslint-disable-next-line \n    const toLogin = () => {\n        sessionStorage.clear();\n        history.push(`/login`);\n    }\n\n    const balanceInCash = (Fund.shares * Fund.fund.sharePrice)\n\n    return (\n        <div className=\"movementsMainCardFund\">\n            <Container fluid className=\"p-0 mt-2\">\n                <Row className=\"m-0\">\n                    <Container className=\"bg-white info ms-0 mb-2 px-0\">\n                        <Col className=\"d-flex justify-content-between align-items-end pe-2\">\n                            <h1 className=\"m-0 title px-2\">\n                                {t(Fund.fund.name)}\n                            </h1>\n                            <h2 className=\"m-0 left\">\n                                FeePart price (Now)\n                                <span className=\"ps-3\" style={{ fontWeight: \"bolder\" }}>\n                                    ${Fund.fund.sharePrice}\n                                </span>\n                            </h2>\n                        </Col>\n                        <Col>\n                            <h2 className=\"px-2 left\">\n                                {Fund.shares} FeeParts in possession\n                            </h2>\n                        </Col>\n                        <Col className=\"d-flex justify-content-between align-items-end pe-2 pb-2 border-bottom-main\">\n                            <Col className=\"d-flex justify-content-between pe-5\" sm=\"auto\">\n                                <Col className=\"pe-2\">\n                                    <div className=\"containerHideInfo px-2\">\n                                        <span>Actual Value in cash of your holding: $</span>\n                                        <span className={`info ${Hide ? \"shown\" : \"hidden\"}`}>\n                                            {balanceInCash.toString().replace(/./g, \"*\")}\n                                        </span>\n\n                                        <span className={`info ${Hide ? \"hidden\" : \"shown\"}`}>\n                                            {balanceInCash.toString()}\n                                        </span>\n\n                                        <span className={`info placeholder`}>\n                                            {balanceInCash.toString()}\n                                        </span>\n                                    </div>\n                                </Col>\n                                <Col sm=\"auto\" className=\"hideInfoButton d-flex align-items-center\">\n                                    <FontAwesomeIcon\n                                        className={`icon ${Hide ? \"hidden\" : \"shown\"}`}\n                                        onClick={() => { setHide(!Hide) }}\n                                        icon={faEye}\n                                    />\n                                    <FontAwesomeIcon\n                                        className={`icon ${!Hide ? \"hidden\" : \"shown\"}`}\n                                        onClick={() => { setHide(!Hide) }}\n                                        icon={faEyeSlash}\n                                    />\n                                    <FontAwesomeIcon\n                                        className=\"icon placeholder\"\n                                        icon={faEyeSlash}\n                                    />\n                                </Col>\n                            </Col>\n                            <Col sm=\"auto\" >\n                                {\"Performance: \"}\n                                <span\n                                    className={{\n                                        '1': 'text-green',\n                                        '-1': 'text-red'\n                                    }[Math.sign(Performance)]}>\n                                    {Performance.toFixed(2)}%\n                                </span>\n                            </Col>\n                        </Col>\n\n                    </Container>\n                    {/*tabs controller*/}\n                    <Container fluid className=\"px-0\">\n                        <Nav className=\"history-tabs\" variant=\"tabs\" activeKey={SelectedTab} onSelect={(e) => { setSelectedTab(e) }}>\n                            <Nav.Item>\n                                <Nav.Link eventKey={\"0\"}>{t(\"Last Movements\")}</Nav.Link>\n                            </Nav.Item>\n                            <Nav.Item>\n                                <Nav.Link eventKey={\"1\"}>{t(\"Fund Detail\")}</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Container>\n                    {/*tabs content */}\n                    <Container fluid className=\"p-3 bg-white\">\n                        {\n                            {\n                                0:\n                                    <MovementsTab setPerformance={setPerformance} NavInfoToggled={NavInfoToggled}\n                                        Fund={Fund} />,\n                                1:\n                                    <FundDetail NavInfoToggled={NavInfoToggled} />\n                            }[SelectedTab]\n                        }\n                    </Container>\n                </Row>\n            </Container>\n        </div>)\n}\nexport default MainCard\n\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\n\nconst Movement = ({ content }) => {\n  var momentDate = moment(content.createdAt);\n\n  return (\n      <tr>\n        <td className=\"tableDate\">{momentDate.format('MMMM Do YYYY, h:mm:ss a')}</td>\n        <td className={`tableAmount ${Math.sign(content.amount) === 1 ? 'text-green' : 'text-red'}`}><span>{Math.sign(content.amount) === 1 ? '+' : '-'}</span><span >$</span>{Math.abs(content.amount)}</td>\n      </tr>\n  )\n}\nexport default Movement\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table } from 'react-bootstrap';\nimport Movement from './Movement';\nimport { useTranslation } from \"react-i18next\";\n\nconst TableLastMovements = ({ content, symbol,NavInfoToggled }) => {\n    const { t } = useTranslation();\n\n    return (\n        <div className={NavInfoToggled? \"movementsTable-navInfoToggled\" : \"movementsTable\" }>\n            <Table id=\"tableMovements\" striped bordered hover className=\"mb-auto m-0\" >\n                <thead >\n                    <tr>\n                        <th className=\"tableHeader\">{t(\"Date\")}</th>\n                        <th className=\"tableDescription d-none d-sm-table-cell\">{t(\"Amount\")}</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    {content.map((u, i) => { ; return (<Movement key={i} content={u} symbol={symbol} />) })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}\nexport default TableLastMovements\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Col,\n  Row,\n} from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\n\nconst NoMovements = ({NavInfoToggled}) => {\n  //To use the translations from i18n\n  const { t } = useTranslation();  \n  return (\n      <Row className={`w-100 d-flex loadingMovements ${NavInfoToggled ? \"navInfoToggled\" : \"\"} justify-content-center align-items-center`}>\n        <Col\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <span className=\"loadingText\">{t(\"There are no movements to show\")}</span>\n        </Col>\n      </Row>\n  )\n}\nexport default NoMovements\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport {\n  Col,\n  Row,\n  Spinner,\n} from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Loading = () => {\n  //To use the translations from i18n\n  const { t } = useTranslation();  \n  return (\n      <Row className=\"w-100 d-flex loadingMovements justify-content-center align-items-center\">\n        <Col\n          className=\"d-flex justify-content-center align-items-center\"\n        >\n          <Spinner className=\"me-2\" animation=\"border\" variant=\"success\" />\n          <span className=\"loadingText\">{t(\"Loading\")}</span>\n        </Col>\n      </Row>\n  )\n}\nexport default Loading\n","import React, { useState, useEffect } from 'react'\n\nimport './index.css'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport TableLastMovements from './TableLastMovements';\n//import MovementsPagination from './MovementsPagination';\nimport NoMovements from './NoMovements';\nimport Loading from './Loading';\nimport {  useHistory } from 'react-router-dom';\n\n\nconst MovementsTab = ({ Fund, NavInfoToggled }) => {\n    const history = useHistory();\n\n    const [Movements, setMovements] = useState([])\n    const [page, setPage] = useState(0)\n    const [FetchingMovements, setFetchingMovements] = useState(true);\n\n    const token = sessionStorage.getItem('access_token')\n\n    const toLogin = () => {\n        sessionStorage.clear(); history.push(`/login`);\n    }\n\n    const getMovements = async () => {\n        var url = `${process.env.REACT_APP_APIURL}/Accounts/${Fund.id}/movements`;\n        setFetchingMovements(true)\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 200) {\n            const data = await response.json()\n            setMovements(data.sort(function (a, b) { return (a.createdAt > b.createdAt) ? -1 : ((a.createdAt < b.createdAt) ? 1 : 0); }))\n            setFetchingMovements(false)\n        } else {\n            switch (response.status) {\n                default:\n                    console.error(\"Error \", response.status, \" account movements\")\n                    toLogin()\n            }\n        }\n    }\n\n    useEffect(() => {\n        if (token === null) toLogin()\n        getMovements();\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [Fund])\n    \n    return (\n        <>\n            {/*Movements */}\n            <div className=\"p-0 mb-2\">\n                <div className=\"d-flex align-items-start justify-content-center flex-column MovementsTableContainer\">\n                    {\n                        FetchingMovements ?\n                            <Loading NavInfoToggled={NavInfoToggled} />\n                            :\n                            Movements.length > 0 ?\n                                <TableLastMovements\n                                    NavInfoToggled={NavInfoToggled}\n                                    content={Movements}\n                                    page={page}\n                                    setPage={setPage} />\n                                :\n                                <NoMovements NavInfoToggled={NavInfoToggled}/>\n                    }\n                    {/*\n                        <MovementsPagination\n                        MovementsCount={100}\n                        IsMobile={IsMobile}\n                        movsShown={movsShown}\n                        page={page}\n                        setPage={setPage}\n                        />\n                    */}\n                </div>\n            </div>\n        </>\n    )\n}\nexport default MovementsTab\n\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nconst FundDetail = () => {\n    return (\n        <div>\n            <h1>Grafico</h1>\n        </div>\n    )\n}\nexport default FundDetail\n\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Col, Row, Nav } from 'react-bootstrap';\n\nimport { useTranslation } from \"react-i18next\";\nimport { useState } from 'react';\nimport { useHistory } from 'react-router-dom'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEyeSlash, faEye } from '@fortawesome/free-solid-svg-icons'\n\nimport MovementsTab from './MovementsTab';\nimport FundDetail from './FundDetail';\nimport './index.css'\n\nconst MainCard = ({ Fund,  Hide, setHide, NavInfoToggled }) => {\n    const [SelectedTab, setSelectedTab] = useState(\"0\")\n    // eslint-disable-next-line \n\n    const { t } = useTranslation();\n    let history = useHistory();\n\n    // eslint-disable-next-line \n    const toLogin = () => {\n        sessionStorage.clear();\n        history.push(`/login`);\n    }\n\n\n    const balanceInCash=Fund.balance \n    \n\n    return (\n        <div className=\"movementsMainCardAccount\">\n            <Container fluid className=\"p-0 mt-2\">\n                <Row className=\"m-0\">\n                    <Container className=\"bg-white info ms-0 mb-2 px-0\">\n                        <Col className=\"d-flex justify-content-between align-items-end pe-2\">\n                            <h1 className=\"m-0 title px-2\">\n                                {t(\"Cash\")}\n                            </h1>\n                        </Col>\n                        <Col className=\"d-flex justify-content-between align-items-end pe-2 pb-2 border-bottom-main\">\n                            <Col className=\"d-flex justify-content-between pe-5\" sm=\"auto\">\n                                <Col className=\"pe-2\">\n                                    <div className=\"containerHideInfo px-2\">\n                                        <span>Balance: $</span>\n                                        <span className={`info ${Hide ? \"shown\" : \"hidden\"}`}>\n                                            {balanceInCash.toString().replace(/./g, \"*\")}\n                                        </span>\n\n                                        <span className={`info ${Hide ? \"hidden\" : \"shown\"}`}>\n                                            {balanceInCash.toString()}\n                                        </span>\n\n                                        <span className={`info placeholder`}>\n                                            {balanceInCash.toString()}\n                                        </span>\n                                    </div>\n                                </Col>\n                                <Col sm=\"auto\" className=\"hideInfoButton d-flex align-items-center\">\n                                    <FontAwesomeIcon\n                                        className={`icon ${Hide ? \"hidden\" : \"shown\"}`}\n                                        onClick={() => { setHide(!Hide) }}\n                                        icon={faEye}\n                                    />\n                                    <FontAwesomeIcon\n                                        className={`icon ${!Hide ? \"hidden\" : \"shown\"}`}\n                                        onClick={() => { setHide(!Hide) }}\n                                        icon={faEyeSlash}\n                                    />\n                                    <FontAwesomeIcon\n                                        className=\"icon placeholder\"\n                                        icon={faEyeSlash}\n                                    />\n                                </Col>\n                            </Col>\n                        </Col>\n\n                    </Container>\n                    {/*tabs controller*/}\n                    <Container fluid className=\"px-0\">\n                        <Nav className=\"history-tabs\" variant=\"tabs\" activeKey={SelectedTab} onSelect={(e) => { setSelectedTab(e) }}>\n                            <Nav.Item>\n                                <Nav.Link eventKey={\"0\"}>{t(\"Last Movements\")}</Nav.Link>\n                            </Nav.Item>\n                        </Nav>\n                    </Container>\n                    {/*tabs content */}\n                    <Container fluid className=\"p-3 bg-white\">\n                        {\n                            {\n                                0:\n                                    <MovementsTab NavInfoToggled={NavInfoToggled} Fund={Fund} />,\n                                1:\n                                    <FundDetail />\n                            }[SelectedTab]\n                        }\n                    </Container>\n                </Row>\n            </Container>\n        </div>)\n}\nexport default MainCard\n\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Collapse, Container, Col, Row } from 'react-bootstrap';\nimport { useTranslation } from \"react-i18next\";\nimport { useRef } from 'react'\nimport './index.css'\n//Parent key 0-> Fund;Parent key 1->Cash\nconst SecondaryCard = ({ Fund, setCategorySelected, setSelected, parentKey, ownKey, selected, Hide,categorySelected }) => {\n    const select = () => {\n        setCategorySelected(parentKey)\n        setSelected(ownKey)\n    }\n\n    const ref = useRef(null)\n\n    const { t } = useTranslation();\n    const balanceInCash=parentKey===1 ? (Fund.shares * Fund.fund.sharePrice) : Fund.balance \n\n    return (\n        <Collapse in={categorySelected!==parentKey || (selected!==ownKey && categorySelected===parentKey )} className=\"pt-0 pb-2 ps-0 pe-1\">\n            <Container fluid className=\"px-0\" ref={ref} >\n                <Row className=\"secondaryCard mx-0 px-0\" onClick={select}>\n                    <Col lg=\"auto\" className=\"d-none d-sm-none d-md-none d-lg-flex currencyCol d-flex align-items-center\">\n                        <div className=\"currencyContainer d-flex align-items-center justify-content-center\">\n                            {\n                                parentKey === 1 ?\n                                    Fund.fund.type !== undefined ?\n                                        <img className=\"currency px-0 mx-0\" alt={Fund.fund.type} src={process.env.PUBLIC_URL + '/images/' + Fund.fund.type + '.svg'} />\n                                        :\n                                        <img className=\"currency px-0 mx-0\" alt=\"crypto\" src={process.env.PUBLIC_URL + '/images/crypto.svg'} />\n                                    :\n                                    <img className=\"currency px-0 mx-0\" alt=\"crypto\" src={process.env.PUBLIC_URL + '/images/cash.svg'} />\n                            }\n                        </div>\n                    </Col>\n                    <Col className=\"secondary d-flex align-items-start flex-column\" >\n                        <div className=\"mb-auto mt-2\">\n                            <h1 className=\"description mt-0 pt-0\">\n                                {t(parentKey === 1 ? Fund.fund.name : \"Cash\")}\n                            </h1>\n                        </div>\n                        <div className=\"mb-2\">\n                            <h2 className=\"funds\">\n                                <div className=\"containerHideInfo\">\n                                    <span style={{ fontWeight: \"bolder\" }}>\n                                        $\n                                    </span>\n                                    <span className={`info ${Hide ? \"shown\" : \"hidden\"}`}>\n                                        {balanceInCash.toString().replace(/./g, \"*\")}\n                                    </span>\n\n                                    <span className={`info ${Hide ? \"hidden\" : \"shown\"}`}>\n                                        {balanceInCash.toString()}\n                                    </span>\n\n                                    <span className={`info placeholder`}>\n                                        {balanceInCash.toString()}\n                                    </span>\n                                </div>\n                            </h2>\n                            <span className=\"funds-description\">{t(\"Balance\")}</span>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n        </Collapse>\n    )\n}\nexport default SecondaryCard\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\n\nconst Movement = ({ content }) => {\n  var momentDate = moment(content.date);\n\n  return (\n    <>\n      <tr>\n        <td className=\"tableDate\">{momentDate.format('MMMM DD YYYY')}</td>\n        <td className=\"tableDescription d-sm-table-cell \">${content.sharePrice}</td>\n      </tr>\n      <tr className=\"d-table-row d-sm-none descriptionRowMobile\">\n        <td className={`tableAmount ${Math.sign(content.shares) === 1 ? 'text-green' : 'text-red'}`}><span>{Math.sign(content.shares) === 1 ? '+' : '-'}</span><span ></span>{Math.abs(content.shares)} FeeParts</td>\n        <td className={`tableAmount ${Math.sign(content.shares) === 1 ? 'text-green' : 'text-red'}`}><span>{Math.sign(content.shares) === 1 ? '+' : '-'}</span><span >$</span>{Math.abs(content.shares) * content.sharePrice}</td>\n      </tr>\n    </>\n\n  )\n}\nexport default Movement\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table, Col, Row, Container, Collapse } from 'react-bootstrap';\nimport Movement from './Movement';\nimport { useTranslation } from \"react-i18next\";\n\nconst TableLastMovements = ({ content,fetchingMovements }) => {\n    const { t } = useTranslation();\n    const [open, setOpen] = useState(false);\n\n    console.log(fetchingMovements)\n\n    return (\n        <Col md=\"12\" className=\"p-0 mt-2\">\n            {fetchingMovements ?\n                <h2>{t(\"Loading movements\")}</h2> :\n                content.length === 0 || content === null ?\n                    <h2>{t(\"There are no records of any movement in this Fund\")}</h2> :\n                    <div>\n                        <Container fluid className=\"p-0\"\n                            onClick={() => setOpen(!open)}\n                            aria-expanded={open}>\n                            <Row className=\"d-flex justify-content-end\">\n                                <Col>\n                                    <h2 className=\"my-2 toggler-mobile\">{t(\"Fund last movements\")}</h2>\n                                </Col>\n                            </Row>\n                        </Container>\n                        <Collapse in={open}>\n                            <div className=\"movementsTable\">\n                                <Table id=\"tableMovements\" striped bordered hover className=\"mt-0\" >\n                                    <thead >\n                                        <tr>\n                                            <th className=\"tableHeader\">{t(\"Date\")}</th>\n                                            <th className=\"tableDescription d-sm-table-cell\">{t(\"Value of the share\")}</th>\n                                        </tr>\n                                        <tr>\n                                            <th className=\"d-sm-table-cell\">{t(\"in FeePars\")}</th>\n                                            <th className=\"tableAmount\">{t(\"In Cash\")}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {content.map((u, i) => { ; return (<Movement key={i} content={u} />) })}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </Collapse>\n                    </div>\n            }\n        </Col>\n    )\n}\nexport default TableLastMovements\n","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Container, Col, Row } from 'react-bootstrap';\nimport TableLastMovements from './TableLastMovements';\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from 'react-router-dom'\n\nconst MobileCard = ({ setItemSelected, isMobile, className, Fund }) => {\n    // eslint-disable-next-line\n\n    const { t } = useTranslation();\n    let history = useHistory();\n    const [movements, setMovements] = useState([])\n    const [fetchingMovements, setFetchingMovements] = useState(true)\n\n    const toLogin = () => {\n        sessionStorage.clear();\n        history.push(`/login`);\n    }\n\n\n    useEffect(() => {\n        const token = sessionStorage.getItem('access_token')\n\n        const getMovements = async () => {\n            setFetchingMovements(true)\n            var url = `${process.env.REACT_APP_APIURL}/funds/${Fund.fundId}/transactions`;\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.status === 200) {\n                const data = await response.json()\n                setMovements(data.sort(function (a, b) { return (a.createdAt > b.createdAt) ? -1 : ((a.createdAt < b.createdAt) ? 1 : 0); }))\n            } else {\n                switch (response.status) {\n                    default:\n                        console.error(response.status)\n                        toLogin()\n                }\n            }\n            setFetchingMovements(false)\n        }\n        getMovements()\n        // eslint-disable-next-line \n    }, [Fund])\n\n    return (\n        <Card border=\"danger\" className=\"movementsCardMobile\">\n            <Card.Header >\n                <Container fluid className=\"px-3\">\n                    <Row className=\"d-flex justify-content-end align-items-center\">\n                        <Col className=\"p-0\">\n                            <Card.Title className=\"mb-0 py-1\">{t(Fund.fund.name)}</Card.Title>\n                        </Col>\n                    </Row>\n                </Container>\n            </Card.Header>\n            <Card.Body className={`pb-0`}>\n                <Container fluid className=\"p-0\">\n                    <Row className=\"m-1\">\n                        <Col xs=\"12\" className=\"px-0\">\n                            <Card.Title >\n                                <span>\n                                    {Fund.shares} FeeParts in possession\n                                </span>\n                            </Card.Title>\n                            <Card.Title >\n                                <span>\n                                    FeePart price (Now)\n                                    <span className=\"ps-3\" style={{ fontWeight: \"bolder\" }}>\n                                        ${Fund.fund.sharePrice}\n                                    </span>\n                                </span>\n                            </Card.Title>\n                            <Card.Text>\n                                <span>{t(\"Balance\")}: <span style={{ fontWeight: \"bolder\" }}>$</span>balanceInCash</span>\n                            </Card.Text>\n                        </Col>\n                        <TableLastMovements\n                            content={movements} fetchingMovements={fetchingMovements} />\n                    </Row>\n                </Container>\n            </Card.Body>\n        </Card>\n    )\n}\nexport default MobileCard\n\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport moment from 'moment';\n\nconst Movement = ({ content }) => {\n  var momentDate = moment(content.date);\n\n  return (\n    <>\n      <tr>\n        <td className=\"tableDate\">{momentDate.format('MMMM DD YYYY')}</td>\n        <td className=\"tableDescription d-sm-table-cell \">${content.balance}</td>\n      </tr>\n    </>\n\n  )\n}\nexport default Movement\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Table, Col, Row, Container, Collapse } from 'react-bootstrap';\nimport Movement from './Movement';\nimport { useTranslation } from \"react-i18next\";\n\nconst TableLastMovements = ({ content,fetchingMovements }) => {\n    const { t } = useTranslation();\n    const [open, setOpen] = useState(false);\n\n    return (\n        <Col md=\"12\" className=\"p-0 mt-2\">\n            {fetchingMovements ?\n                <h2>{t(\"Loading movements\")}</h2> :\n                content.length === 0 || content === null ?\n                    <h2>{t(\"There are no records of any movement in this Account\")}</h2> :\n                    <div>\n                        <Container fluid className=\"p-0\"\n                            onClick={() => setOpen(!open)}\n                            aria-expanded={open}>\n                            <Row className=\"d-flex justify-content-end\">\n                                <Col>\n                                    <h2 className=\"my-2 toggler-mobile\">{t(\"Fund last movements\")}</h2>\n                                </Col>\n                            </Row>\n                        </Container>\n                        <Collapse in={open}>\n                            <div className=\"movementsTable\">\n                                <Table id=\"tableMovements\" striped bordered hover className=\"mt-0\" >\n                                    <thead >\n                                        <tr>\n                                            <th className=\"tableHeader\">{t(\"Date\")}</th>\n                                            <th className=\"tableDescription d-sm-table-cell\">{t(\"Amount\")}</th>\n                                        </tr>\n                                    </thead>\n                                    <tbody>\n                                        {content.map((u, i) => { ; return (<Movement key={i} content={u} />) })}\n                                    </tbody>\n                                </Table>\n                            </div>\n                        </Collapse>\n                    </div>\n            }\n        </Col>\n    )\n}\nexport default TableLastMovements\n","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Card, Container, Col, Row } from 'react-bootstrap';\nimport TableLastMovements from './TableLastMovements';\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from 'react-router-dom'\n\nconst MobileCard = ({ Fund }) => {\n    // eslint-disable-next-line\n\n    const { t } = useTranslation();\n    let history = useHistory();\n    const [movements, setMovements] = useState([])\n    const [fetchingMovements, setFetchingMovements] = useState(true)\n\n    const toLogin = () => {\n        sessionStorage.clear();\n        history.push(`/login`);\n    }\n\n\n    useEffect(() => {\n        const token = sessionStorage.getItem('access_token')\n\n        const getMovements = async () => {\n            var url = `${process.env.REACT_APP_APIURL}/Accounts/${Fund.id}/movements`;\n            setFetchingMovements(true)\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n    \n            if (response.status === 200) {\n                const data = await response.json()\n                setMovements(data.sort(function (a, b) { return (a.createdAt > b.createdAt) ? -1 : ((a.createdAt < b.createdAt) ? 1 : 0); }))\n                setFetchingMovements(false)\n            } else {\n                switch (response.status) {\n                    default:\n                        console.error(\"Error \", response.status, \" account movements\")\n                        toLogin()\n                }\n            }\n        }\n        \n        getMovements()\n        // eslint-disable-next-line \n    }, [Fund])\n\n    return (\n        <Card border=\"danger\" className=\"movementsCardMobile\">\n            <Card.Header >\n                <Container fluid className=\"px-3\">\n                    <Row className=\"d-flex justify-content-end align-items-center\">\n                        <Col className=\"p-0\">\n                            <Card.Title className=\"mb-0 py-1\">{t(\"Cash\")}</Card.Title>\n                        </Col>\n                    </Row>\n                </Container>\n            </Card.Header>\n            <Card.Body className={`pb-0`}>\n                <Container fluid className=\"p-0\">\n                    <Row className=\"m-1\">\n                        <Col xs=\"12\" className=\"px-0\">\n                            <Card.Text>\n                                <span>{t(\"Balance\")}: <span style={{ fontWeight: \"bolder\" }}>$</span>{Fund.balance}</span>\n                            </Card.Text>\n                        </Col>\n                        <TableLastMovements\n                            content={movements} fetchingMovements={fetchingMovements} />\n                    </Row>\n                </Container>\n            </Card.Body>\n        </Card>\n    )\n}\nexport default MobileCard\n\n","import React, { useEffect } from 'react'\nimport { useState } from 'react';\nimport { Row, Col } from 'react-bootstrap';\nimport { useTranslation } from \"react-i18next\";\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport MainCardFund from './MainCard/MainCardFund';\nimport MainCardAccount from './MainCard/MainCardAccount';\n\nimport SecondaryCard from './SecondaryCard';\nimport MobileCardFound from './MobileCards/MobileCardFound';\nimport MobileCardAccount from './MobileCards/MobileCardAccount';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronRight } from '@fortawesome/free-solid-svg-icons'\n\nimport './index.css'\n\nconst CardsContainer = ({ setItemSelected, isMobile, Funds, numberOfFunds, selected, setSelected, NavInfoToggled, Accounts }) => {\n    const [categorySelected, setCategorySelected] = useState(Accounts.length > 0 ? 0 : Funds.length > 0 ? 1 : 0)\n    const [Hide, setHide] = useState(false)\n    const [collapseSecondary, setCollapseSecondary] = useState(false)\n\n    const { t } = useTranslation();\n\n    useEffect(() => {\n        if (numberOfFunds > 0) {\n            if (Accounts.length > 0) { setCategorySelected(0) } else { if (Funds.length > 0) setCategorySelected(1) }\n        }\n    }, [Accounts, Funds, numberOfFunds])\n\n    return (\n        <Row className=\"HistoryCardsContainer d-flex flex-md-nowrap\">\n            {isMobile ?\n                Accounts.length > 1 || Funds.length > 1 ?\n                    <>\n                        <Col md=\"12\" className=\"ps-2 ps-sm-2 ps-md-2 ps-md-0 ps-lg-0 pe-2 pt-0\">\n                            {Accounts.map(\n                                (j, k) => {\n                                    ;\n                                    return (\n                                        <MobileCardAccount Fund={j} />\n                                    )\n                                }\n                            )}\n                            {Funds.map(\n                                (j, k) => {\n                                    ;\n                                    return (\n                                        <MobileCardFound Fund={j} />\n                                    )\n                                }\n                            )}\n                        </Col>\n                    </>\n                    :\n                    <Col className=\"h-100\">\n                        <h1>{t(\"Your user doesn't have any account\")}</h1>\n                    </Col>\n                :\n                numberOfFunds > 1 ?\n                    <>\n                        <Col className=\"px-2 p-relative mainCardCol\"\n                            md=\"12\"\n                            lg={collapseSecondary ? \"12\" : \"8\"}\n                            xl={collapseSecondary ? \"12\" : \"9\"} >\n                            {\n                                categorySelected === 1 ?\n                                    <MainCardFund\n                                        Fund={Funds[selected]}\n                                        Hide={Hide} setHide={setHide}\n                                        NavInfoToggled={NavInfoToggled}\n                                    />\n                                    :\n                                    <MainCardAccount\n                                        Fund={Accounts[selected]}\n                                        Hide={Hide} setHide={setHide}\n                                        NavInfoToggled={NavInfoToggled}\n                                    />\n                            }\n                            <div className={`d-none d-sm-block collapser ${collapseSecondary ? \"expanded\" : \"collapsed\"}`}\n                                onClick={() => { setCollapseSecondary(!collapseSecondary) }}>\n                                <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                        </Col>\n                        <Col sm=\"4\" md=\"4\" lg=\"4\" xl=\"3\"\n                            className={\n                                `secondaryCardContainer \n                                ${NavInfoToggled ? \"free-area-withoutNavInfo\" : \"free-area\"}\n                                ${collapseSecondary ? \"collapsed\" : \"expanded\"} p-relative px-0 pe-2 pt-0`\n                            }>\n                            {\n                                Accounts.length > 0 && (categorySelected === 0 ? Accounts.length - 1 > 0 : true) ?\n                                    <div className=\"CategoryLabel\">\n                                        <h1 className=\"title\">Cash</h1>\n                                    </div>\n                                    :\n                                    null\n                            }\n                            {Accounts.map(\n                                (Account, key) => {\n                                    ;\n                                    return (\n                                        <SecondaryCard\n                                            Hide={Hide}\n                                            Fund={Account}\n                                            categorySelected={categorySelected} setCategorySelected={setCategorySelected}\n                                            selected={selected} setSelected={setSelected}\n                                            parentKey={0} ownKey={key} key={key}\n                                        />\n                                    )\n                                }\n                            )\n                            }\n                            {\n                                Funds.length > 0 && (categorySelected === 1 ? Funds.length - 1 > 0 : true) ?\n                                    <div className=\"CategoryLabel\">\n                                        <h1 className=\"title\">Funds</h1>\n                                    </div>\n                                    :\n                                    null}\n                            {Funds.map(\n                                (Fund, key) => {\n                                    ;\n                                    return (\n                                        <SecondaryCard\n                                            Hide={Hide}\n                                            Fund={Fund}\n                                            categorySelected={categorySelected} setCategorySelected={setCategorySelected}\n                                            selected={selected} setSelected={setSelected}\n                                            parentKey={1} ownKey={key} key={key}\n                                        />\n                                    )\n                                }\n                            )}\n                        </Col>\n                    </>\n                    :\n                    (numberOfFunds === 1 ?\n                        <Col className=\"px-2 pb-2\" xs=\"12\" xl=\"12\" >\n                            {Accounts.length === 1 ?\n                                <MainCardAccount\n                                    Fund={Accounts[0]}\n                                    Hide={Hide} setHide={setHide}\n                                    NavInfoToggled={NavInfoToggled}\n                                />\n                                :\n                                <MainCardFund\n                                    Fund={Funds[0]}\n                                    Hide={Hide} setHide={setHide}\n                                    NavInfoToggled={NavInfoToggled}\n                                />\n                            }\n                        </Col>\n                        :\n                        null\n                    )}\n        </Row>\n    )\n}\nexport default CardsContainer\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React, { useState, useEffect } from 'react';\nimport CardsContainer from './CardsContainer';\nimport { useTranslation } from \"react-i18next\";\nimport { useHistory } from 'react-router-dom'\nimport { Spinner, Row, Container, Col } from 'react-bootstrap';\nconst MovementsTable = ({ isMobile, setItemSelected, numberOfFunds, NavInfoToggled, setNumberOfFunds }) => {\n    const { t } = useTranslation();\n\n    const [Accounts, setAccounts] = useState([]);\n    const [Funds, setFunds] = useState([]);\n\n    const [FetchingFunds, setFetchingFunds] = useState(true);\n\n    const [error, setError] = useState(\"Loading Content\");\n\n    const [selected, setSelected] = useState(0)\n\n    const token = sessionStorage.getItem('access_token')\n\n    let history = useHistory();\n\n    // eslint-disable-next-line \n    const toLogin = () => {\n        sessionStorage.clear(); history.push(`/login`);\n    }\n\n    const getAccounts = async () => {\n        var url = `${process.env.REACT_APP_APIURL}/accounts`;\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 200) {\n            const data = await response.json()\n            setAccounts(data)\n            if (data.length > 0) sessionStorage.setItem('balance', data[0].balance)\n        } else {\n            switch (response.status) {\n                case 500:\n                    console.error(\"Error \", response.status, \" obteniendo stakes\")\n                    break;\n                default:\n                    console.error(\"Error \", response.status, \" obteniendo stakes\")\n            }\n        }\n    }\n    const getFunds = async () => {\n        var url = `${process.env.REACT_APP_APIURL}/funds/stakes`;\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 200) {\n            const data = await response.json()\n            setFunds(data)\n        } else {\n            switch (response.status) {\n                case 500:\n                    console.error(\"Error. obteniendo stakes\")\n                    break;\n                default:\n                    console.error(\"Error. obteniendo stakes\")\n            }\n        }\n        setFetchingFunds(false)\n    }\n\n\n    useEffect(() => {\n        setNumberOfFunds(0)\n        getAccounts();\n        getFunds();\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    useEffect(() => {\n        if(!FetchingFunds){\n            setNumberOfFunds(Accounts.length + Funds.length)\n            if (Accounts.length + Funds.length === 0 && !FetchingFunds) setError(\"No tiene participacion en ningun fondo\")\n        }\n    }, [Accounts, Funds, setNumberOfFunds,FetchingFunds])\n\n    return (\n        <Container fluid className={NavInfoToggled ? \"free-area-withoutNavInfo\" : \"free-area\"}>\n            {\n                FetchingFunds || Funds.length + Accounts.length === 0\n                    ?\n                    <Container fluid>\n                        <Row className=\"d-flex justify-content-center align-items-center\">\n                            <Col className=\"free-area d-flex justify-content-center align-items-center\">\n                                <Spinner className={`me-2 ${error === \"No tiene participacion en ningun fondo\" ? \"d-none\" : \"\"}`} animation=\"border\" variant=\"danger\" />\n                                <span className=\"loadingText\">{t(error)}</span>\n                            </Col>\n                        </Row>\n                    </Container>\n                    :\n                    <CardsContainer\n                        NavInfoToggled={NavInfoToggled}\n                        selected={selected}\n                        setSelected={setSelected}\n                        setItemSelected={setItemSelected}\n                        isMobile={isMobile}\n                        Funds={Funds}\n                        Accounts={Accounts}\n                        numberOfFunds={numberOfFunds}\n                    />\n            }\n\n        </Container>\n    )\n}\nexport default MovementsTable\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row, Col, Form, FloatingLabel, Button } from 'react-bootstrap'\nimport { useTranslation } from 'react-i18next';\n\nconst AddAccount = () => {\n\n    const { t } = useTranslation();\n    const [formData, setFormData] = useState({})\n    const [message, setMessage] = useState()\n\n    const [validated, setValidated] = useState(false);\n    const [buttonDisabled, setButtonDisabled] = useState(false)\n    const handleChange = (event) => {\n        let aux = formData;\n        aux[event.target.id] = event.target.value;\n        setFormData(aux);\n    };\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const form = event.currentTarget;\n        if (form.checkValidity() === true) {\n            signup(formData)\n        }\n        setValidated(true);\n    }\n\n    const signup = async () => {\n        setButtonDisabled(true)\n        var url = `${process.env.REACT_APP_APIURL}/clients/signup`;\n\n        const response = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(formData),\n            headers: {\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 201) {\n            setMessage(\"La cuenta ha sido creada con exito, se enviara un link de verificacion al mail especificado\")\n            setButtonDisabled(false)\n        } else {\n            switch (response.status) {\n                case 500:\n                    setMessage(\"Error. Vefique los datos ingresados\")\n                    break;\n                default:\n                    console.error(response.status)\n                    setMessage(\"unhandled Error\")\n            }\n            setButtonDisabled(false)\n        }\n    }\n\n    return (\n        <Container className=\"h-100\">\n            <Row className=\"h-100 d-flex justify-content-center\">\n                <Col sm=\"12\" md=\"9\">\n                    <h1 className=\"pb-2\">{t(\"Add Account\")}</h1>\n                    <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                        <FloatingLabel\n                            label={t(\"Email\")}\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                onChange={handleChange}\n                                type=\"email\"\n                                placeholder={t(\"Email\")}\n                                required\n                                id=\"email\"\n                            />\n                        </FloatingLabel>\n                        <FloatingLabel\n                            label={t(\"First Name\")}\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                required\n                                id=\"firstName\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                placeholder={t(\"First Name\")}\n                            />\n                        </FloatingLabel>\n                        <FloatingLabel\n                            label={t(\"Last Name\")}\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                required\n                                id=\"lastName\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                placeholder={t(\"Last Name\")}\n                            />\n                        </FloatingLabel>\n                        <FloatingLabel\n                            label={t(\"Password\")}\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                required\n                                id=\"password\"\n                                onChange={handleChange}\n                                type=\"Password\"\n                                placeholder={t(\"Password\")}\n                            />\n                        </FloatingLabel>\n                        <FloatingLabel\n                            label={t(\"username\")}\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                disabled\n                                id=\"username\"\n                                onChange={handleChange}\n                                type=\"text\"\n                                placeholder={t(\"username\")}\n                            />\n                        </FloatingLabel>\n                        <FloatingLabel\n                            id=\"initialFunds\"\n                            label={t(\"Initial Funds\")}\n                            className=\"mb-3\"\n                        >\n                            <Form.Control\n                                disabled\n                                onChange={handleChange}\n                                type=\"number\"\n                                min=\"0\"\n                                placeholder={t(\"Initial Funds\")}\n                            />\n                        </FloatingLabel>\n                        <p>{message}</p>\n                        <Button disabled={buttonDisabled} variant=\"danger\" type=\"submit\">{t(\"Submit\")}</Button>\n                    </Form>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default AddAccount\n\n\n","import React, { useRef, useEffect, useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DonutChart from 'react-donut-chart';\nimport './index.css'\nimport { Col, Card, Container, Row } from 'react-bootstrap'\n\nconst FundCard = ({ Fund, ownKey, data, setData, setSome, some,openAccordion }) => {\n    const ref = useRef(null)\n    const [width, setWidth] = useState(0)\n\n    useEffect(() => {\n        setWidth(ref.current === null ? 200 : ref.current.clientWidth - 20)\n    }, [ref]);\n\n    return (\n        <Col sm=\"3\" className=\"py-1\"\n            style={{\n                pointerEvents: Fund.freeShares === 0 ? \"none\" : \"all\",\n                filter: `opacity(${Fund.freeShares === 0 ? \"0.5\" : \"1\"})`\n            }}>\n            <Card\n                ref={ref}\n                className={`FundCard h-100 ${data.FundSelected === ownKey ? \"FundSelected\" : \"\"}`}\n                onClick={() => { setFundSelected(data, setData, ownKey, setSome, some,openAccordion) }}>\n                <Card.Header><strong className=\"title\">{Fund.name}</strong></Card.Header>\n                <Card.Body>\n                    <Card.Title>FeeParts value: <strong>${Fund.sharePrice}</strong></Card.Title>\n                    <Container fluid className=\"px-0\">\n                        <Row className=\"d-flex justify-content-between\">\n                            <Col md=\"auto\">\n                                <Card.Text className=\"mb-1 feePartsInfo\">\n                                    <strong>{Fund.freeShares}</strong> Available\n                                </Card.Text>\n                            </Col>\n                            <Col md=\"auto\">\n                                <Card.Text className=\"mb-1 feePartsInfo\">\n                                    <strong>{Fund.shares}</strong> Total\n                                </Card.Text>\n                            </Col>\n                        </Row>\n                    </Container>\n                    {\n                        Fund.composition !== undefined\n                            ?\n                            <DonutChart\n                                height={width}\n                                width={width}\n                                className=\"w-100 d-block\"\n                                legend={false}\n                                data={Fund.composition}\n                                colors={['#FFA07A', '#FA8072', '#E9967A', '#F08080', '#CD5C5C', '#DC143C', '#B22222', '#FFO000', '#8B0000', '#800000', '#FF6347', '#FF4500', '#DB7093']}\n                            />\n                            :\n                            null\n                    }\n\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nconst setFundSelected = (data, setData, ownKey, setSome, some,openAccordion) => {\n    let aux = data\n    aux.FundSelected = ownKey\n    setData(aux)\n    setSome(!some)\n    openAccordion()\n}\n\nexport default FundCard","import React, { createRef, useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Row, Form, Accordion, Container } from 'react-bootstrap'\nimport FundCard from './FundCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport { useTranslation } from \"react-i18next\";\n\nconst FundSelector = ({ data, setData, some, setSome, Funds, openAccordion }) => {\n    const { t } = useTranslation();\n    const [showRightChevron, setShowRightChevron] = useState(true)\n    const [showLeftChevron, setShowLeftChevron] = useState(false)\n\n    //For scrolling\n    const FundsContainer = createRef()\n\n    const isNull = () => {\n        return (FundsContainer.current === null)\n    }\n\n    //Scrolling Function\n    const scrollFundContainer = (right) => {\n        let cardWidth = isNull() ? \"\" : FundsContainer.current.clientWidth / 4\n        if (right) {\n            let scrollAmount = 0;\n            let slideTimer = setInterval(function () {\n                if (!isNull()) {\n                    FundsContainer.current.scrollLeft += 15;\n                    scrollAmount += 15;\n                }\n                if (!isNull() && scrollAmount >= cardWidth) {\n                    window.clearInterval(slideTimer);\n                    if (isNull() ? false : FundsContainer.current.scrollLeft !== 0 && !showLeftChevron) {\n                        setShowLeftChevron(true)\n                    } else if (isNull() ? false : FundsContainer.current.scrollWidth\n                        - FundsContainer.current.clientWidth === FundsContainer.current.scrollLeft) {\n                        setShowRightChevron(false)\n                        setShowLeftChevron(true)\n                    }\n                }\n            }, 25);\n        } else {\n            let scrollAmount = 0;\n            let slideTimer = setInterval(function () {\n                if (!isNull()) {\n                    FundsContainer.current.scrollLeft -= 15;\n                    scrollAmount += 15;\n                }\n                if (!isNull() && scrollAmount >= cardWidth) {\n                    window.clearInterval(slideTimer);\n                    if (isNull() ? false : FundsContainer.current.scrollLeft === 0 && showLeftChevron) {\n                        setShowLeftChevron(false)\n                        setShowRightChevron(true)\n                    } else if (isNull() ? false : FundsContainer.current.scrollWidth\n                        - FundsContainer.current.clientWidth !== FundsContainer.current.scrollLeft) {\n                        setShowRightChevron(true)\n                    }\n                }\n            }, 25);\n        }\n    }\n\n    return (\n        <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>\n                <Container>\n                    <Row className=\"d-flex justify-content-center\">\n                        <Form.Label className=\"pt-0 label d-flex align-items-center\" column sm=\"auto\">\n                            <span>\n                            <span className=\"d-inline-block numberContainer\">\n                                <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n                                    <span className=\"number\">1</span>\n                                </div>\n                            </span>\n                            {t(\"Select Fund To buy\")}\n                            </span>\n                        </Form.Label>\n                    </Row>\n                </Container>\n            </Accordion.Header>\n            <Accordion.Body>\n                <div className=\"formSection\">\n                    <Row className=\"d-flex justify-content-center\">\n                        <div className=\"p-relative\">\n                            <Row className=\"flex-row flex-nowrap overflow-hidden\" ref={FundsContainer}>\n                                {Funds.map((Fund, key) => {\n                                    return (\n                                        <FundCard openAccordion={openAccordion} key={key} ownKey={key} \n                                        Fund={Fund} data={data} setData={setData} some={some} setSome={setSome} />\n                                    )\n                                })}\n                            </Row>\n                            <div className={`arrow  right d-none d-sm-block\n                                ${Funds.length > 3 && showRightChevron ? \"opacity-1\" : \"\"}`}\n                                onClick={() => scrollFundContainer(true)}>\n                                <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                            <div className={` arrow left d-none d-sm-block\n                                ${Funds.length > 3 && showLeftChevron ? \"opacity-1\" : \"\"}`}\n                                onClick={() => scrollFundContainer(false)}>\n                                <FontAwesomeIcon icon={faChevronLeft} />\n                            </div>\n                        </div>\n                    </Row>\n                </div>\n            </Accordion.Body>\n        </Accordion.Item>\n    )\n}\nexport default FundSelector","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, InputGroup, Row, Button, Accordion, Container } from 'react-bootstrap'\nimport { useTranslation } from \"react-i18next\";\n\n\nconst BuyData = ({ data, Funds, handleChange, validated, handleSubmit, toggleAccordion,Balance }) => {\n\n    const { t } = useTranslation();\n\n    return (\n        <Accordion.Item eventKey=\"0\" disabled>\n            <Accordion.Header onClick={() => {if(data.FundSelected!==-1)toggleAccordion()}}>\n                <Container>\n                    <Row className=\"d-flex justify-content-center\">\n                        <Form.Label className=\"pt-0 label d-flex align-items-center\" column sm=\"auto\">\n                            <span>\n                                <span className=\"d-inline-block numberContainer\">\n                                    <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n                                        <span className=\"number\">2</span>\n                                    </div>\n                                </span>\n                                {t(\"Specify amount in dollars you want to invest\")}\n                            </span>\n                        </Form.Label>\n                    </Row>\n                </Container>\n            </Accordion.Header>\n            <Accordion.Body>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <InputGroup className=\"mb-3\">\n                        <InputGroup.Text>U$D</InputGroup.Text>\n\n                        <Form.Control\n                            disabled={data.FundSelected===-1}\n                            value={data.amount}\n                            step=\".01\"\n                            onChange={handleChange}\n                            min=\"0.01\"\n                            max={data.FundSelected === -1 ?\n                                1\n                                :\n                                Math.min(Funds[data.FundSelected].freeShares * Funds[data.FundSelected].sharePrice,Balance)}\n                            id=\"amount\"\n                            type=\"number\"\n                            required\n                            placeholder={t(\"Amount\")}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {\n                                data.FundSelected === -1 ?\n                                    \"Please, select a Fund to buy\"\n                                    :\n                                    data.amount === \"\" ?\n                                        \"you should enter how much you want to invest\"\n                                        :\n                                        `You are trying to invest $${data.amount}, with you could buy\n                                        ${data.amount / Funds[data.FundSelected].sharePrice} shares, but there are only\n                                        ${Funds[data.FundSelected].freeShares} free.`}\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback type=\"valid\">\n                            {\n                                data.FundSelected === -1 ?\n                                    \"Please, select a Fund to buy\"\n                                    :\n                                    `You are trying to invest $${data.amount}, with you could buy ${(data.amount / Funds[data.FundSelected].sharePrice).toFixed(2)} shares.`\n                            }\n                        </Form.Control.Feedback>\n                    </InputGroup>\n                    <Button disabled={\n                        data.FundSelected === -1 ? true : data.amount > Math.min(Funds[data.FundSelected].freeShares * Funds[data.FundSelected].sharePrice,Balance) && data.amount>0}\n                        variant=\"danger\" type=\"submit\">{t(\"Submit\")}</Button>\n                </Form>\n            </Accordion.Body>\n        </Accordion.Item>\n    )\n}\nexport default BuyData","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from \"react-i18next\";\nimport { Spinner } from 'react-bootstrap'\n\nconst Loading = () => {\n    const { t } = useTranslation();\n\n    return (\n        <div class=\"h-100 d-flex align-items-center justify-content-center\">\n            <h1>\n                <Spinner className=\"me-2\" animation=\"border\" variant=\"danger\" />\n                {t(\"Loading\")}\n            </h1>\n        </div>\n    )\n}\nexport default Loading","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from \"react-i18next\";\n\nconst NoFunds = () => {\n    const { t } = useTranslation();\n\n    return (\n        <div class=\"h-100 d-flex align-items-center justify-content-center\">\n            <h1>\n                {t(\"There are no funds available for the operation\")}\n            </h1>\n        </div>\n    )\n}\nexport default NoFunds","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../operationsForm.css'\n\nimport { Container, Row, Col, Accordion } from 'react-bootstrap'\nimport FundSelector from './FundSelector'\nimport BuyData from './BuyData'\nimport { useHistory } from 'react-router-dom';\nimport Loading from '../Loading';\nimport NoFunds from '../NoFunds';\n\nconst BuyForm = ({ NavInfoToggled }) => {\n    //HardCoded data (here we should request Funds that have available feeParts to sell)\n    const [data, setData] = useState({ amount: 1, FundSelected: -1 })\n    const [some, setSome] = useState(false)\n    const [Funds, setFunds] = useState([])\n    const [validated, setValidated] = useState(true);\n    const [CollapsedFields, setCollapsedFields] = useState(true);\n    const [Account, setAccount] = useState(0);\n    const [FetchingFunds, setFetchingFunds] = useState(true)\n\n    const token = sessionStorage.getItem('access_token')\n\n    let history = useHistory();\n\n\n    const buy = async () => {\n        var url = `${process.env.REACT_APP_APIURL}/funds/${Funds[data.FundSelected].id}/buy`;\n        const response = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ amount: parseFloat(data.amount) }),\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 201) {\n            return (true)\n        } else {\n            switch (response.status) {\n                case 500:\n                    console.error(response.status)\n                    return (false)\n                default:\n                    console.error(response.status)\n                    return (false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        const getFunds = async () => {\n            var url = `${process.env.REACT_APP_APIURL}/funds`;\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.status === 200) {\n                const data = await response.json()\n                setFunds(data)\n                setFetchingFunds(false)\n            } else {\n                switch (response.status) {\n                    case 500:\n                        console.error(\"Error. Vefique los datos ingresados\")\n                        break;\n                    default:\n                        console.error(response.status)\n                }\n            }\n        }\n\n        const getAccount = async () => {\n            var url = `${process.env.REACT_APP_APIURL}/accounts`;\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.status === 200) {\n                const data = await response.json()\n                setAccount(data[0])\n                if (data.length > 0) sessionStorage.setItem('balance', data[0].balance)\n            } else {\n                switch (response.status) {\n                    case 500:\n                        console.error(\"Error \", response.status, \" obteniendo stakes\")\n                        break;\n                    default:\n                        console.error(\"Error \", response.status, \" obteniendo stakes\")\n                }\n            }\n        }\n        getAccount()\n        getFunds()\n\n        let aux = data\n        aux.FundSelected = -1\n        setData(aux)\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    const handleChange = (event) => {\n        let aux = data;\n        aux[event.target.id] = event.target.value;\n        setData(aux);\n        setSome(!some)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const form = event.currentTarget;\n        if (form.checkValidity() === true) {\n            if (token === null) {\n                console.log(\"compra\")\n            } else {\n                let success = buy()\n                if (success) {\n                    history.push(`/dashboardnew/operationResult`);\n                }\n            }\n        }\n        setValidated(true);\n    }\n\n    const toggleAccordion = () => {\n        setCollapsedFields(!CollapsedFields)\n    }\n    const openAccordion = () => {\n        setCollapsedFields(false)\n    }\n    return (\n        <Container className={NavInfoToggled ? \"free-area-withoutNavInfo\" : \"free-area\"}>\n            <Row className=\"newTicket h-100\">\n                {\n                    FetchingFunds ?\n                        <Loading />\n                        :\n                        Funds.length > 0 ?\n                            <Col xs=\"12\">\n                                <Accordion flush defaultActiveKey=\"0\">\n                                    <FundSelector openAccordion={openAccordion}\n                                        Funds={Funds} data={data} some={some} setData={setData} setSome={setSome} />\n                                </Accordion>\n                                <Accordion flush activeKey={CollapsedFields ? \"-1\" : \"0\"}>\n                                    <BuyData\n                                        handleSubmit={handleSubmit} validated={validated}\n                                        handleChange={handleChange} Funds={Funds} data={data}\n                                        toggleAccordion={toggleAccordion} Balance={Account.balance} />\n                                </Accordion>\n                            </Col>\n                            :\n                            <NoFunds />\n                }\n            </Row>\n        </Container>\n    )\n}\nexport default BuyForm","import React, { useRef, useEffect, useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport DonutChart from 'react-donut-chart';\nimport './index.css'\nimport { Col, Card, Container, Row } from 'react-bootstrap'\n\nconst FundCard = ({ Fund, ownKey, data, setData, setSome, some,openAccordion }) => {\n    const ref = useRef(null)\n    const [width, setWidth] = useState(0)\n\n    useEffect(() => {\n        setWidth(ref.current === null ? 200 : ref.current.clientWidth - 20)\n    }, [ref]);\n\n    return (\n        <Col sm=\"3\" className=\"py-1\"\n            style={{\n                pointerEvents: Fund.freeShares === 0 ? \"none\" : \"all\",\n                filter: `opacity(${Fund.freeShares === 0 ? \"0.5\" : \"1\"})`\n            }}>\n            <Card\n                ref={ref}\n                className={`FundCard h-100 ${data.FundSelected === ownKey ? \"FundSelected\" : \"\"}`}\n                onClick={() => { setFundSelected(data, setData, ownKey, setSome, some,openAccordion) }}>\n                <Card.Header><strong className=\"title\">{Fund.fund.name}</strong></Card.Header>\n                <Card.Body>\n                    <Card.Title>Obtained FeeParts in cash: <strong>${Fund.fund.sharePrice*Fund.shares}</strong></Card.Title>\n                    <Container fluid className=\"px-0\">\n                        <Row className=\"d-flex justify-content-between\">\n                            <Col md=\"auto\">\n                                <Card.Text className=\"mb-1 feePartsInfo\">\n                                    <strong>{Fund.shares}</strong> in posesion\n                                </Card.Text>\n                            </Col>\n                            <Col md=\"auto\">\n                                <Card.Text className=\"mb-1 feePartsInfo\">\n                                    <strong>${Fund.fund.sharePrice}</strong> Each\n                                </Card.Text>\n                            </Col>\n                        </Row>\n                    </Container>\n                    {\n                        Fund.fund.composition !== undefined\n                            ?\n                            <DonutChart\n                                height={width}\n                                width={width}\n                                className=\"w-100 d-block\"\n                                legend={false}\n                                data={Fund.fund.composition}\n                                colors={['#FFA07A', '#FA8072', '#E9967A', '#F08080', '#CD5C5C', '#DC143C', '#B22222', '#FFO000', '#8B0000', '#800000', '#FF6347', '#FF4500', '#DB7093']}\n                            />\n                            :\n                            null\n                    }\n\n                </Card.Body>\n            </Card>\n        </Col>\n    )\n}\n\nconst setFundSelected = (data, setData, ownKey, setSome, some,openAccordion) => {\n    let aux = data\n    aux.FundSelected = ownKey\n    setData(aux)\n    setSome(!some)\n    openAccordion()\n}\n\nexport default FundCard","import React, { createRef, useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Row, Form, Accordion, Container } from 'react-bootstrap'\nimport FundCard from './FundCard';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronLeft, faChevronRight } from '@fortawesome/free-solid-svg-icons'\nimport { useTranslation } from \"react-i18next\";\n\nconst FundSelector = ({ data, setData, some, setSome, Funds,openAccordion }) => {\n    const { t } = useTranslation();\n    const [showRightChevron, setShowRightChevron] = useState(true)\n    const [showLeftChevron, setShowLeftChevron] = useState(false)\n\n    //For scrolling\n    const FundsContainer = createRef()\n\n    const isNull = () => {\n        return (FundsContainer.current === null)\n    }\n\n    //Scrolling Function\n    const scrollFundContainer = (right) => {\n        let cardWidth = isNull() ? \"\" : FundsContainer.current.clientWidth / 4\n        if (right) {\n            let scrollAmount = 0;\n            let slideTimer = setInterval(function () {\n                if (!isNull()) {\n                    FundsContainer.current.scrollLeft += 15;\n                    scrollAmount += 15;\n                }\n                if (!isNull() && scrollAmount >= cardWidth) {\n                    window.clearInterval(slideTimer);\n                    if (isNull() ? false : FundsContainer.current.scrollLeft !== 0 && !showLeftChevron) {\n                        setShowLeftChevron(true)\n                    } else if (isNull() ? false : FundsContainer.current.scrollWidth\n                        - FundsContainer.current.clientWidth === FundsContainer.current.scrollLeft) {\n                        setShowRightChevron(false)\n                        setShowLeftChevron(true)\n                    }\n                }\n            }, 25);\n        } else {\n            let scrollAmount = 0;\n            let slideTimer = setInterval(function () {\n                if (!isNull()) {\n                    FundsContainer.current.scrollLeft -= 15;\n                    scrollAmount += 15;\n                }\n                if (!isNull() && scrollAmount >= cardWidth) {\n                    window.clearInterval(slideTimer);\n                    if (isNull() ? false : FundsContainer.current.scrollLeft === 0 && showLeftChevron) {\n                        setShowLeftChevron(false)\n                        setShowRightChevron(true)\n                    } else if (isNull() ? false : FundsContainer.current.scrollWidth\n                        - FundsContainer.current.clientWidth !== FundsContainer.current.scrollLeft) {\n                        setShowRightChevron(true)\n                    }\n                }\n            }, 25);\n        }\n    }\n\n    return (\n        <Accordion.Item eventKey=\"0\">\n            <Accordion.Header>\n                <Container>\n                    <Row className=\"d-flex justify-content-center\">\n                        <Form.Label className=\"pt-0 label d-flex align-items-center\" column sm=\"auto\">\n                            <span>\n                                <span className=\"d-inline-block numberContainer\">\n                                    <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n                                        <span className=\"number\">1</span>\n                                    </div>\n                                </span>\n                                {t(\"Select Fund To sell\")}\n                            </span>\n                        </Form.Label>\n                    </Row>\n                </Container>\n            </Accordion.Header>\n            <Accordion.Body>\n                <div className=\"formSection\">\n                    <Row className=\"d-flex justify-content-center\">\n                        <div className=\"p-relative\">\n                            <Row className=\"flex-row flex-nowrap overflow-hidden\" ref={FundsContainer}>\n                                {Funds.map((Fund, key) => {\n                                    return (\n                                        <FundCard openAccordion={openAccordion} key={key} ownKey={key} \n                                        Fund={Fund} data={data} setData={setData} some={some} setSome={setSome} />\n                                    )\n                                })}\n                            </Row>\n                            <div className={`arrow  right d-none d-sm-block\n                                ${Funds.length > 3 && showRightChevron ? \"opacity-1\" : \"\"}`}\n                                onClick={() => scrollFundContainer(true)}>\n                                <FontAwesomeIcon icon={faChevronRight} />\n                            </div>\n                            <div className={` arrow left d-none d-sm-block\n                                ${Funds.length > 3 && showLeftChevron ? \"opacity-1\" : \"\"}`}\n                                onClick={() => scrollFundContainer(false)}>\n                                <FontAwesomeIcon icon={faChevronLeft} />\n                            </div>\n                        </div>\n                    </Row>\n                </div>\n            </Accordion.Body>\n        </Accordion.Item>\n    )\n}\nexport default FundSelector","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, InputGroup, Row, Button, Accordion, Container } from 'react-bootstrap'\nimport { useTranslation } from \"react-i18next\";\n\n\nconst SellData = ({ data, Funds, handleChange, validated, handleSubmit,toggleAccordion }) => {\n\n    const { t } = useTranslation();\n\n    return (\n        <Accordion.Item eventKey=\"0\">\n            <Accordion.Header onClick={() => {if(data.FundSelected!==-1)toggleAccordion()}}>\n                <Container>\n                    <Row className=\"d-flex justify-content-center\">\n                        <Form.Label className=\"pt-0 label d-flex align-items-center\" column sm=\"auto\">\n                            <span>\n                                <span className=\"d-inline-block numberContainer\">\n                                    <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n                                        <span className=\"number\">2</span>\n                                    </div>\n                                </span>\n                                {t(\"Specify the amount of shares you want to sell\")}\n                            </span>\n                        </Form.Label>\n                    </Row>\n                </Container>\n            </Accordion.Header>\n            <Accordion.Body>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <InputGroup className=\"mb-1\">\n                        <Form.Control\n                            value={data.shares}\n                            onChange={handleChange}\n                            min=\"0.01\"\n                            step=\"0.01\"\n                            max={data.FundSelected === -1 ?\n                                1\n                                :\n                                Funds[data.FundSelected].shares\n                            }\n                            id=\"shares\"\n                            type=\"number\"\n                            required\n                            placeholder={t(\"Shares\")}\n                        />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {\n                                data.FundSelected === -1 ?\n                                    \"Please, select a Fund to Sell\"\n                                    :\n                                    data.shares === \"\" ?\n                                        \"you should enter how much you want to invest\"\n                                        :\n                                        `You are trying to sell ${data.shares} shares, equivalent to\n                                        $${(data.shares * Funds[data.FundSelected].fund.sharePrice).toFixed(2)}, but you only have ${Funds[data.FundSelected].shares} in position.`}\n                        </Form.Control.Feedback>\n                        <Form.Control.Feedback type=\"valid\">\n                            {\n                                data.FundSelected === -1 ?\n                                    \"Please, select a Fund to Sell\"\n                                    :\n                                    `Selling ${data.shares} feeParts from ${Funds[data.FundSelected].fund.name},\n                                    equivalent to $${data.shares * Funds[data.FundSelected].fund.sharePrice} `\n                            }\n                        </Form.Control.Feedback>\n                    </InputGroup>\n                    <Button disabled={\n                        data.FundSelected === -1 ? true : data.shares > Funds[data.FundSelected].shares || data.shares<=0}\n                        variant=\"danger\" type=\"submit\">{t(\"Submit\")}</Button>\n                </Form>\n            </Accordion.Body>\n        </Accordion.Item>\n    )\n}\nexport default SellData","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport { Container, Row, Col, Accordion } from 'react-bootstrap'\nimport FundSelector from './FundSelector'\nimport SellData from './SellData'\nimport { useHistory } from 'react-router-dom';\nimport Loading from '../Loading';\nimport NoFunds from '../NoFunds';\n\nconst SellForm = ({ NavInfoToggled }) => {\n    //HardCoded data (here we should request Funds that have available feeParts to sell)\n    const [data, setData] = useState({ shares: 0.01, FundSelected: -1 })\n    const [some, setSome] = useState(false)\n    const [Funds, setFunds] = useState([])\n    const [validated, setValidated] = useState(true);\n    const [CollapsedFields, setCollapsedFields] = useState(true);\n    const [FetchingFunds, setFetchingFunds] = useState(true)\n\n    const token = sessionStorage.getItem('access_token')\n\n    let history = useHistory();\n\n\n    const sell = async () => {\n        var url = `${process.env.REACT_APP_APIURL}/funds/${Funds[data.FundSelected].fundId}/sell`;\n        const response = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify({ shares:  parseFloat(data.shares) }),\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 201) {\n            return (true)\n        } else {\n            switch (response.status) {\n                case 500:\n                    console.error(response.status)\n                    return (false)\n                default:\n                    console.error(response.status)\n                    return (false)\n            }\n        }\n    }\n\n    useEffect(() => {\n        const getFunds = async () => {\n            var url = `${process.env.REACT_APP_APIURL}/funds/stakes`;\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.status === 200) {\n                const data = await response.json()\n                setFunds(data)\n                setFetchingFunds(false)\n            } else {\n                switch (response.status) {\n                    case 500:\n                        console.error(\"Error. Vefique los datos ingresados\")\n                        break;\n                    default:\n                        console.error(response.status)\n                }\n            }\n        }\n\n        getFunds()\n        let aux = data\n        aux.FundSelected = -1\n        setData(aux)\n        return () => {\n        }\n        // eslint-disable-next-line\n    }, [])\n\n    const handleChange = (event) => {\n        let aux = data;\n        aux[event.target.id] = event.target.value;\n        setData(aux);\n        setSome(!some)\n    }\n\n    const handleSubmit = (event) => {\n        event.preventDefault();\n        event.stopPropagation();\n        const form = event.currentTarget;\n        if (form.checkValidity() === true) {\n            let success = sell()\n            if (success) {\n                history.push(`/dashboardnew/operationResult`);\n            }\n        }\n        setValidated(true);\n    }\n\n    const toggleAccordion = () => {\n        setCollapsedFields(!CollapsedFields)\n    }\n    const openAccordion = () => {\n        setCollapsedFields(false)\n    }\n\n    return (\n        <Container className={NavInfoToggled ? \"free-area-withoutNavInfo\" : \"free-area\"}>\n            <Row className=\"newTicket h-100\">\n                {\n                    FetchingFunds ?\n                        <Loading />\n                        :\n                        Funds.length > 0 ?\n                            <Col xs=\"12\">\n                                <Accordion flush defaultActiveKey=\"0\">\n                                    <FundSelector openAccordion={openAccordion}\n                                        Funds={Funds} data={data} some={some} setData={setData} setSome={setSome} />\n                                </Accordion>\n                                <Accordion flush activeKey={CollapsedFields ? \"-1\" : \"0\"}>\n                                    <SellData toggleAccordion={toggleAccordion} handleSubmit={handleSubmit} validated={validated}\n                                        handleChange={handleChange} Funds={Funds} data={data} />\n                                </Accordion>\n                            </Col>\n                            :\n                            <NoFunds />\n                }\n            </Row>\n        </Container>\n    )\n}\nexport default SellForm","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../operationsForm.css'\n\nimport { Container, Row, Col, Form } from 'react-bootstrap'\nimport { useTranslation } from \"react-i18next\";\n\nconst WithDrawForm = ({NavInfoToggled}) => {\n\n    const { t } = useTranslation();\n\n\n    return (\n        <Container >\n            <Row className={`${NavInfoToggled? \"free-area-withoutNavInfo\": \"free-area\"} newTicket d-flex justify-content-center`}>\n                <Col sm=\"9\">\n                    <div className=\"formSection\">\n                        <Row className=\"d-flex justify-content-center\">\n                            <Form.Label className=\"mb-3 pt-0 label d-flex align-items-center\" column sm=\"auto\">\n                                <div className=\"d-inline-block numberContainer\">\n                                    <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n                                        <span className=\"number\">1</span>\n                                    </div>\n                                </div>\n                                {t(\"Select Fund To buy\")}\n                            </Form.Label>\n                            <div>\n                                <Row className=\"d-flex justify-content-center\">\n                                    <h1>Contenido form depositar</h1>\n                                </Row>\n                            </div>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default WithDrawForm","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../operationsForm.css'\n\nimport { Container, Row, Col, Form } from 'react-bootstrap'\nimport { useTranslation } from \"react-i18next\";\n\nconst DepositForm = ({NavInfoToggled}) => {\n\n    const { t } = useTranslation();\n\n\n    return (\n        <Container className={NavInfoToggled? \"free-area-withoutNavInfo\": \"free-area\"}>\n            <Row className=\"newTicket d-flex justify-content-center\">\n                <Col sm=\"9\">\n                    <div className=\"formSection\">\n                        <Row className=\"d-flex justify-content-center\">\n                            <Form.Label className=\"mb-3 pt-0 label d-flex align-items-center\" column sm=\"auto\">\n                                <div className=\"d-inline-block numberContainer\">\n                                    <div className=\"d-flex justify-content-center align-items-center h-100 w-100\">\n                                        <span className=\"number\">1</span>\n                                    </div>\n                                </div>\n                                {t(\"Select Fund To buy\")}\n                            </Form.Label>\n                            <div>\n                                <Row className=\"d-flex justify-content-center\">\n                                    <h1>Contenido form depositar</h1>\n                                </Row>\n                            </div>\n                        </Row>\n                    </div>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default DepositForm","import React, { useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport '../operationsForm.css'\n\nimport { Container, Row, Col } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCheckCircle } from '@fortawesome/free-regular-svg-icons'\nimport './index.css'\n\nconst OperationStatus = ({setItemSelected,NavInfoToggled}) => {\n    useEffect(() => {\n        setItemSelected(\"\")\n    }, [setItemSelected])\n    return (\n        <Container className=\"OperationStatus\">\n            <Row className={`${NavInfoToggled? \"free-area-withoutNavInfo\": \"free-area\"} d-flex align-items-center justify-content-center`}>\n                <Col sm=\"auto\">\n                    <h1 className=\"statusIcon\"><FontAwesomeIcon icon={faCheckCircle}/></h1>\n                    <h1  className=\"message\">Transaction done successfully</h1>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default OperationStatus","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTrashAlt } from '@fortawesome/free-regular-svg-icons'\nimport { faExclamation, faCheck,faTimes } from '@fortawesome/free-solid-svg-icons'\nimport { Modal, Button } from 'react-bootstrap'\n\n\nconst DeleteConfirmationModal = ({ show, setShowModal, Fund, chargeFunds }) => {\n    const { t } = useTranslation();\n\n    const [DeleteFetch, setDeleteFetch] = useState({ fetched: false, fetching: false, valid: false })\n\n    const handleClose = () => {\n        setDeleteFetch({\n            ...DeleteFetch,\n            fetching: false,\n            fetched: false,\n            valid: false\n        })\n        chargeFunds()\n        setShowModal(false)\n    }\n\n    const closeModalWithoutReloading = () => {\n        setDeleteFetch({\n            ...DeleteFetch,\n            fetching: false,\n            fetched: false,\n            valid: false\n        })\n        setShowModal(false)\n    }\n\n    const deleteFund = async () => {\n        setDeleteFetch({\n            ...DeleteFetch,\n            fetching: true,\n            fetched: false,\n            valid: false\n        })\n\n        const url = `${process.env.REACT_APP_APIURL}/funds/${Fund.id}`;\n        const token = sessionStorage.getItem(\"access_token\")\n\n        const response = await fetch(url, {\n            method: 'delete',\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 200) {\n            setDeleteFetch({\n                ...DeleteFetch,\n                fetching: false,\n                fetched: true,\n                valid: true\n            })\n        } else {\n            setDeleteFetch({\n                ...DeleteFetch,\n                fetching: false,\n                fetched: true,\n                valid: false\n            })\n            switch (response.status) {\n                default:\n                    console.error(response.status)\n            }\n        }\n    }\n\n    return (\n        <Modal className=\"deleteModal\" size=\"sm\" show={show} onHide={handleClose}>\n            <Modal.Body className=\"body\">\n                <div className={!DeleteFetch.fetched && !DeleteFetch.fetching ? \"show\" : \"hidden\"}>\n                    <div className=\"descriptionIconContainer red mx-auto\">\n                        <h1 className=\"title\"><FontAwesomeIcon className=\"icon red\" icon={faExclamation} /></h1>\n                    </div>\n                    <h1 className=\"title\"> {t(\"Are you sure?\")}</h1>\n                    <h2 className=\"subTitle\">{t(\"You are about to delete the fund\")}{\" \\\"\"}{Fund.name}{\"\\\"\"}</h2>\n                    <h3 className=\"heading\">{t(\"This action cannot be undone\")}</h3>\n                </div>\n                <div className={DeleteFetch.fetched && !DeleteFetch.fetching ? \"show\" : \"hidden\"}>\n                    {\n                        DeleteFetch.valid ?\n                            <>\n                                <div className=\"descriptionIconContainer green mx-auto\">\n                                    <h1 className=\"title\"><FontAwesomeIcon className=\"icon green\" icon={faCheck} /></h1>\n                                </div>\n                                <h2 className=\"subTitle mt-4\">{t(\"The fund\")}{\" \\\"\"}{Fund.name}{\"\\\" \"}{t(\"has been removed succesfully\")}</h2>\n                            </>\n                            :\n                            <>\n                                <div className=\"descriptionIconContainer red mx-auto\">\n                                    <h1 className=\"title\"><FontAwesomeIcon className=\"icon red\" icon={faTimes} /></h1>\n                                </div>\n                                <h2 className=\"subTitle mt-4\">{t(\"Failed to delete the fund\")}{\" \\\"\"}{Fund.name}{\"\\\" \"}</h2>\n                                <h3 className=\"heading\">{t(\"It is probably due to a user owning shares\")}</h3>\n                            </>\n                    }\n\n                </div>\n                <div className=\"placeHolder\">\n                    <div className=\"descriptionIconContainer red mx-auto\">\n                        <h1 className=\"title\"><FontAwesomeIcon className=\"icon red\" icon={faExclamation} /></h1>\n                    </div>\n                    <h1 className=\"title\"> {t(\"Are you sure?\")}</h1>\n                    <h2 className=\"subTitle\">{t(\"You are about to delete the fund\")}{\" \"}{Fund.name}</h2>\n                    <h3 className=\"heading\">{t(\"This action cannot be undone\")}</h3>\n                </div>\n            </Modal.Body>\n\n            <Modal.Footer className=\"footer justify-content-center\">\n                {\n                    DeleteFetch.fetched ?\n                        <Button variant=\"outline-secondary\" onClick={() => handleClose()}>\n                            Close\n                        </Button>\n                        :\n                        <>\n\n                            <Button variant=\"outline-secondary\" onClick={() => closeModalWithoutReloading()}>\n                                {t(\"Cancel\")}\n                            </Button>\n                            <Button variant=\"outline-danger\" onClick={() => { deleteFund() }}>\n                                <div className=\"iconContainer red\">\n                                    <FontAwesomeIcon icon={faTrashAlt} />\n                                </div>\n                            </Button>\n                        </>\n                }\n\n            </Modal.Footer>\n        </Modal>\n    )\n}\nexport default DeleteConfirmationModal\n","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from 'react-i18next';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport {  faEdit } from '@fortawesome/free-regular-svg-icons'\nimport DeleteConfirmationModal from './DeleteConfirmationModal'\n\nconst FundRow = ({ Fund, AssetTypes, chargeFunds, setAction, Action, ownKey }) => {\n\n    const { t } = useTranslation();\n    const [ShowModal, setShowModal] = useState(false)\n    \n    // eslint-disable-next-line\n    const launchDeleteConfirmation = () => {\n        setShowModal(true)\n    }\n\n    return (\n        <>\n            <tr className=\"fundRow\">\n                <td className=\"Id\">{t(Fund.id)}</td>\n                <td className=\"Name\">{t(Fund.name)}</td>\n                <td className=\"Type\">{t(AssetTypes[getAssetTypeById(AssetTypes, Fund.typeId)].name)}</td>\n                <td className=\"Shares\">{t(Fund.shares)}</td>\n                <td className=\"FreeShares\">{t(Fund.freeShares)}</td>\n                <td className=\"SharePrice\">{t(Fund.sharePrice)}</td>\n\n                <td className=\"Actions verticalCenter\" >\n                    <div className=\"h-100 d-flex align-items-center justify-content-around\">\n                        {/*<div className=\"iconContainer red\" onClick={() => { launchDeleteConfirmation() }}>\n                            <FontAwesomeIcon className=\"icon\" icon={faTrashAlt} />\n                        </div>*/}\n                        <div className=\"iconContainer green\" onClick={() => setAction({ ...Action, ...{ action: 0, fund: ownKey } })}>\n                            <FontAwesomeIcon className=\"icon\" icon={faEdit} />\n                        </div>\n                    </div>\n                </td>\n            </tr>\n            <DeleteConfirmationModal show={ShowModal} setShowModal={setShowModal} Fund={Fund} chargeFunds={chargeFunds} />\n        </>\n    )\n}\nexport default FundRow\n\n\nconst getAssetTypeById = (assetTypes, id) =>\n    assetTypes.findIndex((AssetType) => AssetType.id === id)\n\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faPlusCircle } from '@fortawesome/free-solid-svg-icons'\n//import { Form } from 'react-bootstrap'\n\nconst AddFundRow = ({ Action,setAction }) => {\n\n    return (\n        <>\n            <tr className=\"fundRow addFund\">\n                <td className=\"verticalCenter Id\" >            \n                </td>\n                <td className=\"cellWithoudPadding Name\">\n                </td>\n                <td className=\"cellWithoudPadding Type\">\n                </td>\n                <td className=\"cellWithoudPadding Shares\">\n                </td>\n                <td className=\"cellWithoudPadding FreeShares\">\n                </td>\n                <td className=\"cellWithoudPadding SharePrice\">\n                </td>\n                <td className=\"verticalCenter Actions solid-bg\" >\n                    <div className=\"h-100 d-flex align-items-center justify-content-around\">\n                        <div className=\"iconContainer green\">\n                            <button onClick={()=>setAction({...Action,...{action:1,fund:-1}})} className=\"noStyle\">\n                                <FontAwesomeIcon className=\"icon\" icon={faPlusCircle} />\n                            </button>\n                        </div>\n                    </div>\n                </td>\n            </tr>\n        </>\n    )\n}\nexport default AddFundRow\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from 'react-i18next';\nimport { Table } from 'react-bootstrap'\nimport FundRow from './FundRow'\nimport AddFundRow from './AddFundRow'\n\nconst FundsTable = ({ Funds, AssetTypes, chargeFunds, setAction, Action }) => {\n\n    const { t } = useTranslation();\n\n    return (\n        <Table className=\"FundsTable\" striped bordered hover>\n\n            <thead className=\"verticalTop tableHeader solid-bg\">\n                <tr>\n                    <th className=\"id\">{t(\"#id\")}</th>\n                    <th className=\"Name\">{t(\"Name\")}</th>\n                    <th className=\"Type\">{t(\"Type\")}</th>\n                    <th className=\"Shares\">{t(\"Shares\")}</th>\n                    <th className=\"FreeShares\">{t(\"Free Shares\")}</th>\n                    <th className=\"SharePrice\">{t(\"Share Price\")}</th>\n                    <th className=\"Actions\">{t(\"Actions\")}</th>\n                </tr>\n            </thead>\n            <tbody>\n                {Funds.map((Fund, key) => {\n                    return <FundRow AssetTypes={AssetTypes} Fund={Fund} key={key} ownKey={key}\n                        chargeFunds={chargeFunds} Action={Action} setAction={setAction} />\n                })}\n            </tbody>\n             <thead className=\"verticalTop\">\n                <AddFundRow Action={Action} setAction={setAction} />\n            </thead>\n        </Table>\n    )\n}\nexport default FundsTable","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from 'react-i18next';\nimport { InputGroup, Form } from 'react-bootstrap'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faSearch, faTimes } from '@fortawesome/free-solid-svg-icons'\n\nconst FundsSearch = ({ SearchText, handleSearch,FilteredFunds,cancelSearch }) => {\n\n    const { t } = useTranslation();\n\n    return (\n        <InputGroup className={`my-3 searchBar ${FilteredFunds.length>0 || SearchText.length===0 ? \"\" : \"notfound\"} ${SearchText.length === 0 ? \"\" : \"search\"} `}>\n            <InputGroup.Text className=\"left\" id=\"basic-addon1\">\n                <FontAwesomeIcon className=\"icon\" icon={faSearch} />\n            </InputGroup.Text>\n            <Form.Control\n                onChange={handleSearch}\n                value={SearchText}\n                placeholder={t(\"Search fund by name\")}\n                aria-label=\"Search\"\n            />\n            {SearchText.length > 0 ?\n                <InputGroup.Text onClick={()=>{cancelSearch()}} className=\"right\" id=\"basic-addon1\">\n                    <FontAwesomeIcon className=\"icon\" icon={faTimes}/>\n                </InputGroup.Text>\n                :\n                null\n            }\n\n        </InputGroup>\n    )\n}\nexport default FundsSearch\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col, Row,Container } from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\n\nconst NoFunds = ({ NavInfoToggled }) => {\n    //To use the translations from i18n\n    const { t } = useTranslation();\n\n    return (\n        <Container>\n            <Row>\n                <Col xs=\"12\" className=\"d-flex justify-content-center\">\n                    <span className=\"loadingText\">{t(\"There were no results for your search\")}</span>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default NoFunds\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col } from 'react-bootstrap'\nimport FundsTable from './FundsTable'\nimport FundsSearch from './FundsSearch'\nimport NoFunds from './NoFunds'\n\nconst ViewDeleteAndCreateFunds = ({ SearchText,handleSearch,cancelSearch,AssetTypes,FilteredFunds, chargeFunds,setAction,Action}) => {\n\n    return (\n        <Col sm=\"12\" md=\"10\" className=\"ViewDeleteAndCreateFunds\">\n            <FundsSearch FilteredFunds={FilteredFunds} SearchText={SearchText} handleSearch={handleSearch} cancelSearch={cancelSearch} />\n            {\n                FilteredFunds.length === 0 && SearchText.length>0 ?\n                    <NoFunds /> :\n                    <FundsTable Funds={FilteredFunds} AssetTypes={AssetTypes} chargeFunds={chargeFunds} Action={Action} setAction={setAction}/>\n            }\n        </Col>\n    )\n}\n\nexport default ViewDeleteAndCreateFunds","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, FloatingLabel, Spinner } from 'react-bootstrap'\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst EditFunds = ({ data, EditRequest,handleChange,Funds,Action,setAction,validated,handleSubmit,AssetTypes }) => {\n    const { t } = useTranslation();\n    return (\n            <div className=\"editForm\">\n                <div className=\"header\">\n                    <h1 className=\"title\">\n                        {t(\"Fund edit form for\")}{\" \\\"\"}{Funds[Action.fund].name}{\"\\\"\"}\n                    </h1>\n                    <FontAwesomeIcon className=\"button icon\" onClick={() => {setAction({...Action,...{action:-1,fund:-1}})}} icon={faChevronCircleLeft} />\n                </div>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <FloatingLabel\n                        label={t(\"Name\")}\n                        className=\"mb-3\"\n                    >\n                        <Form.Control required onChange={handleChange} id=\"name\" value={data.name} type=\"text\" placeholder={t(\"Name\")} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {t(\"You must provide a name for the fund\")}\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <FloatingLabel className=\"mb-3\" label={t(\"Asset Types\")}>\n                        <Form.Select required id=\"typeId\" onChange={handleChange} value={data.typeId}>\n                            {AssetTypes.map((Asset, key) => {\n                                return <option key={key} value={Asset.id}>{Asset.name}</option>\n                            })}\n                        </Form.Select>\n                    </FloatingLabel>\n                    <FloatingLabel\n                        label={t(\"Shares\")}\n                        className=\"mb-3\"\n                    >\n                        <Form.Control readonly disabled onChange={handleChange} id=\"shares\" value={data.shares} min=\"0.01\" step=\"0.01\" type=\"number\" placeholder={t(\"Shares\")} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {t(\"The shares must be more than 0\")}\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <FloatingLabel\n                        label={t(\"Free Shares\")}\n                        className=\"mb-3\"\n                    >\n                        <Form.Control readonly disabled onChange={handleChange} id=\"freeShares\" value={data.freeShares} min=\"0.01\" step=\"0.01\" max={data.shares} type=\"number\" placeholder={t(\"Free Shares\")} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {data.freeShares === 0 ?\n                                t(\"The free shares must be more than 0\")\n                                :\n                                t(\"The free shares must be less than or equal to Fund's total shares\") + \" (\" + data.shares + \")\"\n                            }\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <FloatingLabel\n                        label={t(\"Share Price\")}\n                        className=\"mb-3\"\n                    >\n                        <Form.Control required onChange={handleChange} id=\"sharePrice\" value={data.sharePrice} min=\"0.01\" step=\"0.01\" type=\"number\" placeholder={t(\"Share Price\")} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {t(\"The share price value must be greater than 0\")}\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <div className=\"d-flex justify-content-end\">\n                        <Button variant=\"danger\" type=\"submit\" className=\"mb-3\">\n                            <Spinner animation=\"border\" variant=\"light\"\n                                className={`${EditRequest.fetching ? \"d-inline-block\" : \"d-none\"} littleSpinner ms-1`} />\n                            {t(\"Submit\")}\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        \n    )\n}\n\nexport default EditFunds","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleLeft,faTimes,faCheck } from '@fortawesome/free-solid-svg-icons'\n\nconst EditFunds = ({ EditRequest, setAction, chargeFunds, Funds, Action }) => {\n    const { t } = useTranslation();\n    return (\n        <div className=\"editResult\">\n            <div className=\"header\">\n                <h1 className=\"title\">\n                   {t(\"Form edit result for \")}{\" \\\"\"}{Funds[Action.fund].name}{\"\\\"\"}\n                </h1>\n                <FontAwesomeIcon className=\"button icon\" onClick={() => {setAction({...Action,...{action:-1,fund:-1}});chargeFunds()}} icon={faChevronCircleLeft} />\n            </div>\n            {\n                EditRequest.valid ?\n                    <>\n                        <div className=\"descriptionIconContainer green mx-auto\">\n                            <h1 className=\"title\"><FontAwesomeIcon className=\"icon green\" icon={faCheck} /></h1>\n                        </div>\n                        <h2 className=\"subTitle mt-4\">{t(\"The fund\")}{\" \\\"\"}{Funds[Action.fund].name}{\"\\\" \"}{t(\"has been edited succesfully\")}</h2>\n                    </>\n                    :\n                    <>\n                        <div className=\"descriptionIconContainer red mx-auto\">\n                            <h1 className=\"title\"><FontAwesomeIcon className=\"icon red\" icon={faTimes} /></h1>\n                        </div>\n                        <h2 className=\"subTitle mt-4\">{t(\"Failed to edit the fund\")}{\" \\\"\"}{Funds[Action.fund].name}{\"\\\" \"}</h2>\n                        <h3 className=\"heading\">{t(\"It is probably due to a user owning shares\")}</h3>\n                    </>\n            }\n        </div>\n\n    )\n}\n\nexport default EditFunds","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col } from 'react-bootstrap'\n\nimport EditForm from './EditForm'\nimport EditResult from './EditResult'\nconst EditFunds = ({ Funds, AssetTypes, chargeFunds, Action, setAction }) => {\n    const [validated, setValidated] = useState(false);\n    const [data, setData] = useState({\n        name: Funds[Action.fund].name,\n        typeId: Funds[Action.fund].typeId,\n        shares: Funds[Action.fund].shares,\n        freeShares: Funds[Action.fund].freeShares,\n        sharePrice: Funds[Action.fund].sharePrice,\n\n    })\n\n    const [EditRequest, setEditRequest] = useState({\n        fetching: false,\n        fetched: false,\n        valid: false\n    })\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity()) {\n            editFund()\n        }\n        setValidated(true);\n    };\n\n    const handleChange = (event) => {\n        let aux = data\n        aux[event.target.id] = parseInt(event.target.value) || event.target.value\n        setData({ ...data, ...aux })\n    }\n\n    const editFund = async () => {\n        setEditRequest(\n            {\n                ...EditRequest, ...{\n                    fetching: true,\n                    fetched: false,\n                    valid: false\n                }\n            }\n        )\n\n        const url = `${process.env.REACT_APP_APIURL}/funds/${Funds[Action.fund].id}`;\n        const token = sessionStorage.getItem(\"access_token\")\n        const response = await fetch(url, {\n            method: 'PUT',\n            body: JSON.stringify(data),\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 200) {\n            setEditRequest(\n                {\n                    ...EditRequest, ...{\n                        fetching: false,\n                        fetched: true,\n                        valid: true\n                    }\n                }\n            )\n        } else {\n            setEditRequest(\n                {\n                    ...EditRequest, ...{\n                        fetching: false,\n                        fetched: true,\n                        valid: false\n                    }\n                }\n            )\n            switch (response.status) {\n                default:\n                    console.error(response.status)\n            }\n        }\n    }\n\n    return (\n        <Col sm=\"12\" md=\"10\">\n            {\n                EditRequest.fetched ?\n                    <EditResult EditRequest={EditRequest} setAction={setAction} chargeFunds={chargeFunds}\n                        Funds={Funds} Action={Action} />\n                    :\n                    <EditForm\n                        data={data} handleChange={handleChange} handleSubmit={handleSubmit} EditRequest={EditRequest}\n                        Funds={Funds} Action={Action} setAction={setAction} validated={validated} AssetTypes={AssetTypes}\n                    />\n            }\n\n        </Col>\n    )\n}\n\nexport default EditFunds","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Form, Button, FloatingLabel, Spinner } from 'react-bootstrap'\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleLeft } from '@fortawesome/free-solid-svg-icons'\n\nconst CreateFunds = ({ data, CreateRequest,handleChange,Action,setAction,validated,handleSubmit,AssetTypes }) => {\n    const { t } = useTranslation();\n    return (\n            <div className=\"editForm\">\n                <div className=\"header\">\n                    <h1 className=\"title\">\n                        {t(\"Fund Create form\")}\n                    </h1>\n                    <FontAwesomeIcon className=\"button icon\" onClick={() => {setAction({...Action,...{action:-1,fund:-1}})}} icon={faChevronCircleLeft} />\n                </div>\n                <Form noValidate validated={validated} onSubmit={handleSubmit}>\n                    <FloatingLabel\n                        label={t(\"Name\")}\n                        className=\"mb-3\"\n                    >\n                        <Form.Control required onChange={handleChange} id=\"name\" value={data.name} type=\"text\" placeholder={t(\"Name\")} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {t(\"You must provide a name for the fund\")}\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <FloatingLabel className=\"mb-3\" label={t(\"Asset Types\")}>\n                        <Form.Select required id=\"typeId\" onChange={handleChange} value={data.typeId}>\n                            {AssetTypes.map((Asset, key) => {\n                                return <option key={key} value={Asset.id}>{Asset.name}</option>\n                            })}\n                        </Form.Select>\n                    </FloatingLabel>\n                    <FloatingLabel\n                        label={t(\"Shares\")}\n                        className=\"mb-3\"\n                    >\n                        <Form.Control required onChange={handleChange} id=\"shares\" value={data.shares} min=\"0.01\" step=\"0.01\" type=\"number\" placeholder={t(\"Shares\")} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {t(\"The shares must be more than 0\")}\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <FloatingLabel\n                        label={t(\"Free Shares\")}\n                        className=\"mb-3\"\n                    >\n                        <Form.Control required onChange={handleChange} id=\"freeShares\" value={data.freeShares} min=\"0.01\" step=\"0.01\" max={data.shares} type=\"number\" placeholder={t(\"Free Shares\")} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {data.freeShares === 0 ?\n                                t(\"The free shares must be more than 0\")\n                                :\n                                t(\"The free shares must be less than or equal to Fund's total shares\") + \" (\" + data.shares + \")\"\n                            }\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <FloatingLabel\n                        label={t(\"Share Price\")}\n                        className=\"mb-3\"\n                    >\n                        <Form.Control required onChange={handleChange} id=\"sharePrice\" value={data.sharePrice} min=\"0.01\" step=\"0.01\" type=\"number\" placeholder={t(\"Share Price\")} />\n                        <Form.Control.Feedback type=\"invalid\">\n                            {t(\"The share price value must be greater than 0\")}\n                        </Form.Control.Feedback>\n                    </FloatingLabel>\n                    <div className=\"d-flex justify-content-end\">\n                        <Button variant=\"danger\" type=\"submit\" className=\"mb-3\">\n                            <Spinner animation=\"border\" variant=\"light\"\n                                className={`${CreateRequest.fetching ? \"d-inline-block\" : \"d-none\"} littleSpinner ms-1`} />\n                            {t(\"Submit\")}\n                        </Button>\n                    </div>\n                </Form>\n            </div>\n        \n    )\n}\n\nexport default CreateFunds","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faChevronCircleLeft,faTimes,faCheck } from '@fortawesome/free-solid-svg-icons'\n\nconst CreateFunds = ({ CreateRequest, setAction, chargeFunds, Funds, Action }) => {\n    const { t } = useTranslation();\n    return (\n        <div className=\"editResult\">\n            <div className=\"header\">\n                <h1 className=\"title\">\n                   {t(\"Form Create result\")}\n                </h1>\n                <FontAwesomeIcon className=\"button icon\" onClick={() => {setAction({...Action,...{action:-1,fund:-1}});chargeFunds()}} icon={faChevronCircleLeft} />\n            </div>\n            {\n                CreateRequest.valid ?\n                    <>\n                        <div className=\"descriptionIconContainer green mx-auto\">\n                            <h1 className=\"title\"><FontAwesomeIcon className=\"icon green\" icon={faCheck} /></h1>\n                        </div>\n                        <h2 className=\"subTitle mt-4\">{t(\"The fund has been Createed succesfully\")}</h2>\n                    </>\n                    :\n                    <>\n                        <div className=\"descriptionIconContainer red mx-auto\">\n                            <h1 className=\"title\"><FontAwesomeIcon className=\"icon red\" icon={faTimes} /></h1>\n                        </div>\n                        <h2 className=\"subTitle mt-4\">{t(\"Failed to Create the fund\")}</h2>\n                        <h3 className=\"heading\">{t(\"It is probably due to a user owning shares\")}</h3>\n                    </>\n            }\n        </div>\n\n    )\n}\n\nexport default CreateFunds","import React, { useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col } from 'react-bootstrap'\n\nimport CreateForm from './CreateForm'\nimport CreateResult from './CreateResult'\nconst CreateFunds = ({ Funds, AssetTypes, chargeFunds, Action, setAction }) => {\n    const [validated, setValidated] = useState(false);\n    const [data, setData] = useState({\n        name: \"\",\n        shares: 0,\n        freeShares: 0,\n        sharePrice: 0,\n        typeId: 1\n    })\n\n    const createFund = async () => {\n        setCreateRequest(\n            {\n                ...CreateRequest, ...{\n                    fetching: true,\n                    fetched: false,\n                    valid: false\n                }\n            }\n        )\n        const url = `${process.env.REACT_APP_APIURL}/funds`;\n        const token = sessionStorage.getItem(\"access_token\")\n        const response = await fetch(url, {\n            method: 'POST',\n            body: JSON.stringify(data),\n            headers: {\n                Authorization: `Bearer ${token}`,\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 201) {\n            setCreateRequest(\n                {\n                    ...CreateRequest, ...{\n                        fetching: false,\n                        fetched: true,\n                        valid: true\n                    }\n                }\n            )\n        } else {\n            setCreateRequest(\n                {\n                    ...CreateRequest, ...{\n                        fetching: false,\n                        fetched: true,\n                        valid: false\n                    }\n                }\n            )\n            switch (response.status) {\n                default:\n                    console.error(response.status)\n            }\n        }\n    }\n\n    const [CreateRequest, setCreateRequest] = useState({\n        fetching: false,\n        fetched: false,\n        valid: false\n    })\n\n    const handleSubmit = (event) => {\n        const form = event.currentTarget;\n        event.preventDefault();\n        event.stopPropagation();\n        if (form.checkValidity()) {\n            createFund()\n        }\n        setValidated(true);\n    };\n\n    const handleChange = (event) => {\n        let aux = data\n        aux[event.target.id] = parseInt(event.target.value) || event.target.value\n        setData({ ...data, ...aux })\n    }\n    \n    return (\n        <Col sm=\"12\" md=\"10\">\n            {\n                CreateRequest.fetched ?\n                    <CreateResult CreateRequest={CreateRequest} setAction={setAction} chargeFunds={chargeFunds}\n                        Funds={Funds} Action={Action} />\n                    :\n                    <CreateForm\n                        data={data} handleChange={handleChange} handleSubmit={handleSubmit} CreateRequest={CreateRequest}\n                        Funds={Funds} Action={Action} setAction={setAction} validated={validated} AssetTypes={AssetTypes}\n                    />\n            }\n\n        </Col>\n    )\n}\n\nexport default CreateFunds","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Col, Row, Spinner,Container } from \"react-bootstrap\";\nimport { useTranslation } from \"react-i18next\";\n\nconst Loading = ({ NavInfoToggled }) => {\n    //To use the translations from i18n\n    const { t } = useTranslation();\n\n    return (\n        <Container className=\"h-100\">\n            <Row className=\"h-100 d-flex align-items-center\">\n                <Col xs=\"12\" className=\"d-flex justify-content-center align-items-center\">\n                    <Spinner className=\"me-2\" animation=\"border\" variant=\"success\" />\n                    <span className=\"loadingText\">{t(\"Loading\")}</span>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default Loading\n","import React, { useState, useEffect } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, Row } from 'react-bootstrap'\nimport ViewAndDeleteFunds from './ViewAndDeleteFunds'\nimport EditFunds from './EditFunds'\nimport CreateFunds from './CreateFunds'\nimport Loading from './Loading'\nimport './index.css'\n\n\nconst FundsAdministration = () => {\n    const [FetchingFunds, setFetchingFunds] = useState([])\n    const [Funds, setFunds] = useState([])\n    const [FilteredFunds, setFilteredFunds] = useState([])\n    const [AssetTypes, setAssetTypes] = useState([])\n\n    const [Action, setAction] = useState({ fund: -1, action: -1 })//Action===0 -> edit; Action===1 -> create\n\n    const [SearchText, setSearchText] = useState(\"\")\n\n    const getFunds = async () => {\n        var url = `${process.env.REACT_APP_APIURL}/funds`;\n\n        const response = await fetch(url, {\n            method: 'GET',\n            headers: {\n                Accept: \"*/*\",\n                'Content-Type': 'application/json'\n            }\n        })\n\n        if (response.status === 200) {\n            const data = await response.json()\n            setFunds(data)\n            setFilteredFunds(data)\n            setFetchingFunds(false)\n        } else {\n            switch (response.status) {\n                default:\n                    console.error(response.status)\n            }\n        }\n    }\n\n    useEffect(() => {\n        const getTypes = async () => {\n            var url = `${process.env.REACT_APP_APIURL}/assets/types`;\n\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.status === 200) {\n                const data = await response.json()\n                setAssetTypes(data)\n                getFunds()\n            } else {\n                switch (response.status) {\n                    default:\n                        console.error(response.status)\n                }\n            }\n        }\n\n        setFetchingFunds(true)\n        getTypes()\n    }, [])\n\n    const handleSearch = (event) => {\n        setSearchText(event.target.value)\n        const regex = new RegExp(`${event.target.value}`, 'i')\n        const suggestions = Funds.sort().filter(Fund => Fund.name.match(regex))\n        setFilteredFunds(suggestions)\n    }\n\n    const cancelSearch = () => {\n        setSearchText(\"\")\n        setFilteredFunds(Funds)\n    }\n\n    const chargeFunds = () => {\n        setFetchingFunds(true)\n        getFunds()\n    }\n\n    if (FetchingFunds) {\n        return <Loading />\n    } else {\n        return (\n            <Container className=\"h-100 FundsAdministration\">\n                <Row className=\"h-100 d-flex justify-content-center\">\n                    {\n\n                        {\n                            \"-1\":\n                                <ViewAndDeleteFunds\n                                    SearchText={SearchText} handleSearch={handleSearch} cancelSearch={cancelSearch} AssetTypes={AssetTypes}\n                                    FilteredFunds={FilteredFunds} chargeFunds={chargeFunds} setAction={setAction} Action={Action}\n                                />\n                            ,\n                            0: <EditFunds Funds={Funds} AssetTypes={AssetTypes} chargeFunds={chargeFunds}\n                                Action={Action} setAction={setAction} />,\n                            1: <CreateFunds Funds={Funds} AssetTypes={AssetTypes} chargeFunds={chargeFunds}\n                                Action={Action} setAction={setAction} />\n                        }[Action.action]\n                    }\n                </Row>\n            </Container>\n        )\n    }\n\n}\nexport default FundsAdministration","import React, { useEffect, useState } from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Route, useRouteMatch, useHistory, useLocation } from 'react-router-dom';\n\nimport './index.css'\n\nimport FundsContainer from './FundsContainer'\nimport NavBar from './NavBars/NavBar';\nimport NavInfo from './NavBars/NavInfo';\nimport NavBarMobile from './NavBars/NavBarMobile';\nimport NavBarTotal from './NavBars/NavBarTotal';\nimport Footer from './Footer';\n\nimport MovementsTable from './User/MovementsTable';\nimport AddAccount from './Admin/AddAccount';\n\nimport BuyForm from './User/newTicket/BuyForm';\nimport SellForm from './User/newTicket/SellForm';\nimport WithdrawForm from './User/newTicket/WithdrawForm';\nimport DepositForm from './User/newTicket/DepositForm';\nimport OperationStatus from './User/newTicket/OperationStatus';\nimport FundsAdministration from './Admin/FundsAdministration';\n\nconst UserDashboard = () => {\n    // eslint-disable-next-line \n    let location = useLocation()\n\n    const { path } = useRouteMatch()\n    const history = useHistory();\n    const [NavInfoToggled, setNavInfoToggled] = useState(false)\n    const [userData, setUserData] = useState({});\n    const [width, setWidth] = useState(window.innerWidth);\n    const [numberOfFunds, setNumberOfFunds] = useState(0);\n    const [itemSelected, setItemSelected] = useState(location.pathname.split('/')[2])\n    const [balance, setBalance] = useState(0)\n\n\n    const admin = sessionStorage.getItem(\"admin\")\n\n    useEffect(\n        () => {\n            const selected = location.pathname.split('/')[2]\n            setItemSelected(selected)\n        },\n        [location]\n    )\n\n    function handleWindowSizeChange() {\n        setWidth(window.innerWidth);\n    }\n\n    let isMobile = (width <= 576);\n\n    //When the user try to open this url it checks if the user has a valid token in their session storage,\n    //if it is true, it is redirected to the dashboard, if not, it is redirected to login\n    const getUserData = () => {\n        setUserData({ \"id\": 4, \"username\": \"Marco\", \"email\": \"marcos.sk8.parengo@gmail.com\", \"externalId\": \"RL580035\", \"firstName\": \"Marco\", \"lastName\": \"Giangarelli\", \"gender\": \"M\", \"birthdate\": \"2002-05-16\", \"customer\": {} })\n    }\n\n\n\n    useEffect(() => {\n        const toLogin = () => {\n            sessionStorage.clear(); history.push(`/login`);\n        }\n\n        const getAccounts = async () => {\n            var url = `${process.env.REACT_APP_APIURL}/accounts`;\n            const response = await fetch(url, {\n                method: 'GET',\n                headers: {\n                    Authorization: `Bearer ${token}`,\n                    Accept: \"*/*\",\n                    'Content-Type': 'application/json'\n                }\n            })\n\n            if (response.status === 200) {\n                const data = await response.json()\n                if (data.length > 0) { sessionStorage.setItem('balance', data[0].balance); setBalance(data[0].balance) }\n            } else {\n                switch (response.status) {\n                    default:\n                        toLogin()\n                }\n            }\n        }\n        window.addEventListener('resize', handleWindowSizeChange);\n\n        const admin = sessionStorage.getItem(\"admin\")\n        const token = sessionStorage.getItem('access_token')\n\n        if (token === null || admin === undefined) toLogin()\n\n        getUserData();\n        getAccounts();\n        return () => {\n            window.removeEventListener('resize', handleWindowSizeChange);\n        }\n    }, [history])\n\n\n    return (\n        <div className=\"dashboard\" style={{ backgroundImage: `url(${process.env.PUBLIC_URL}/images/backGround/bgDashboard.svg)` }}>\n            <NavInfo NavInfoToggled={NavInfoToggled} userData={userData} />\n            <NavBar NavInfoToggled={NavInfoToggled} setNavInfoToggled={setNavInfoToggled}\n                setItemSelected={setItemSelected} itemSelected={itemSelected} />\n            {JSON.parse(admin) ?\n                <div className={`adminContainer ${NavInfoToggled ? \"free-area-withoutNavInfo\" : \"free-area\"}`}>\n                    <Route path={`${path}/addAccount`}>\n                        <AddAccount />\n                    </Route>\n                    <Route path={`${path}/fundsAdministration`}>\n                        <FundsAdministration />\n                    </Route>\n                    <Route path={`${path}/pendingAprovals`}>\n                        \n                    </Route>\n                </div>\n                :\n                <>\n                    <NavBarTotal balance={balance} />\n                    <Route path={`${path}/accounts`}>\n                        <FundsContainer\n                            NavInfoToggled={NavInfoToggled}\n                            isMobile={isMobile}\n                            setItemSelected={setItemSelected}\n                            numberOfFunds={numberOfFunds}\n                            setNumberOfFunds={setNumberOfFunds}\n                        />\n                    </Route>\n                    <Route path={`${path}/history`}>\n                        <MovementsTable\n                            isMobile={isMobile}\n                            setItemSelected={setItemSelected}\n                            numberOfFunds={numberOfFunds}\n                            setNumberOfFunds={setNumberOfFunds}\n                            NavInfoToggled={NavInfoToggled}\n                        />\n                    </Route>\n                    <Route path={`${path}/buy`}>\n                        <BuyForm NavInfoToggled={NavInfoToggled} />\n                    </Route>\n                    <Route path={`${path}/sell`}>\n                        <SellForm NavInfoToggled={NavInfoToggled} />\n                    </Route>\n                    <Route path={`${path}/deposit`}>\n                        <DepositForm NavInfoToggled={NavInfoToggled} />\n                    </Route>\n                    <Route path={`${path}/withdraw`}>\n                        <WithdrawForm NavInfoToggled={NavInfoToggled} />\n                    </Route>\n                    <Route path={`${path}/operationResult`}>\n                        <OperationStatus setItemSelected={setItemSelected} NavInfoToggled={NavInfoToggled} />\n                    </Route>\n                </>\n            }\n            <Footer />\n            <NavBarMobile setItemSelected={setItemSelected} itemSelected={itemSelected} />\n        </div>\n    )\n}\nexport default UserDashboard\n","import React from 'react'\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { useTranslation } from \"react-i18next\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faFrown } from '@fortawesome/free-regular-svg-icons'\nimport { Container,Row,Col } from 'react-bootstrap'\nimport './index.css'\n\nconst NotFund = () => {\n    const { t } = useTranslation();\n\n    return (\n        <Container className=\"notFund\">\n            <Row className=\"min-100vh d-flex justify-content-center align-items-center\">\n                <Col sm=\"auto\">                     \n                    <FontAwesomeIcon icon={faFrown} className=\"icon\"/>\n                    <h1 className=\"title\">Error 404</h1>\n                    <h2 className=\"description\">{t(\"Not Fund\")}</h2>\n                </Col>\n            </Row>\n        </Container>\n    )\n}\nexport default NotFund\n","import React from 'react'\nimport './App.css';\nimport Landing from './components/Landing';\nimport Containerlogin from './components/Containerlogin';\nimport ContainerForgotPassword from './components/ContainerForgotPassword';\nimport ContainerChangePassword from './components/ContainerChangePassword';\nimport ContainerVerifyAccount from './components/ContainerVerifyAccount';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport UserDashboardNew from './components/UserDashboardNew';\nimport NotFound from './components/NotFound';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\">\n              <Landing />\n            </Route>\n            <Route exact path=\"/login\">\n              <Containerlogin />\n            </Route>\n            <Route exact path=\"/forgotPassword\">\n              <ContainerForgotPassword />\n            </Route>\n            <Route exact path=\"/changePassword/:user/:token\">\n              <ContainerChangePassword />\n            </Route>\n            <Route exact path=\"/changePassword\">\n              <ContainerChangePassword />\n            </Route>\n            <Route exact path=\"/verifyAccount\">\n              <ContainerVerifyAccount />\n            </Route>\n            <Route exact path=\"/verifyAccount/:user/:token\">\n              <ContainerVerifyAccount />\n            </Route>\n            <Route path=\"/DashboardNew\">\n              <UserDashboardNew />\n            </Route>\n            <Route>\n              <NotFound />\n            </Route>\n          </Switch>\n        </BrowserRouter>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}